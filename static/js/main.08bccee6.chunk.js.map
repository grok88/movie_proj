{"version":3,"sources":["api/api.ts","Store/appReducer.ts","components/Header/Login/LoginForm/LoginForm.tsx","components/Header/Login/Login.tsx","components/Header/UserHeaderAvatar/UserHeaderAvatar.tsx","components/Header/UserDropDownMenu/UserDropDownMenu.tsx","components/Header/Header.tsx","components/Filters/TotalPages/TotalPages.tsx","components/Filters/FilterPagination/FilterPagination.tsx","components/Filters/Select/Select.tsx","components/Filters/ReleaseYear/ReleaseYear.tsx","components/Filters/GenresFilterPage/GenresFilter/GenresFilter.tsx","Store/genresFilterReducer.ts","components/Filters/GenresFilterPage/GenresFilterPage.tsx","components/Filters/Filters.tsx","Store/moviesReducer.ts","components/Movies/MovieItem.tsx","components/Movies/MoviesHOC.tsx","Store/movieReducer.ts","components/Movies/MoviesList.tsx","components/Pages/MoviesPage/MoviesPage.tsx","components/Pages/MoviePage/Poster/Poster.tsx","components/Pages/MoviePage/TabMoviePage/ActingPage/ActingPage.tsx","components/Pages/MoviePage/TabMoviePage/SimilarMoviePage/SimilarMoviesList/SimilarMoviesList.tsx","components/Pages/MoviePage/TabMoviePage/SimilarMoviePage/SimilarMoviePage.tsx","Store/tabMovieReducer.ts","components/Pages/MoviePage/TabMoviePage/MoviePageInfo/MoviePageInfo.tsx","components/Pages/MoviePage/TabMoviePage/TabMoviePage.tsx","components/Pages/MoviePage/MoviePage.tsx","components/Pages/PageNotFound/PageNotFound.tsx","components/Common/Loader/Loader.tsx","components/Pages/Favorite/Favorite.tsx","Store/personReducer.ts","components/Pages/PersonPage/PersonItem/PersonItem.tsx","components/Pages/PersonPage/PersonPage.tsx","components/App.tsx","Store/store.ts","index.js"],"names":["axiosInstance","axios","create","headers","Content-Type","API_URL","API_KEY_3","API","link","get","then","res","data","session_id","delete","tokenUrl","loginUrl","body","post","sessionUrl","cookies","Cookies","initialState","user","isAuth","disabled","error","status","setUser","type","payload","changeStatus","setSessionId","setError","changeIsAuth","changeDisabled","getAccountDetails","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","getState","wrap","_context2","prev","next","sent","t0","response","status_message","setTimeout","stop","_x3","_x4","apply","this","arguments","userAuthFlow","username","password","_ref3","_callee3","_context3","concat","request_token","session","set","path","maxAge","accountUrl","catch","e","message","finally","_x5","_x6","validate","values","errors","repeatPassword","LoginForm","_ref","toggleModal","useDispatch","useSelector","state","app","formik","useFormik","initialValues","onSubmit","react_default","createElement","className","Form","handleSubmit","FormGroup","Label","for","Input","assign","id","placeholder","getFieldProps","style","touched","border","undefined","color","Login","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","prevState","showModal","onClick","Modal","isOpen","toggle","ModalBody","Login_LoginForm_LoginForm","PureComponent","UserHeaderAvatar","Fragment","width","src","avatar","tmdb","avatar_path","alt","Component","UserDropDownMenu","dropdownOpen","toggleDropdown","_this$props","onDeleteSession","Dropdown","DropdownToggle","tag","data-toggle","aria-expanded","Header_UserHeaderAvatar_UserHeaderAvatar","DropdownMenu","right","DropdownItem","react_router_dom","to","textDecoration","Header","Header_UserDropDownMenu_UserDropDownMenu","Header_Login_Login","TotalPages","React","memo","totalPages","page","display","paddingTop","FilterPagination","onChangePage","role","aria-label","TotalPages_TotalPages","Select","selectValue","changeFilters","target","value","name","nextProps","nextState","nextContext","filters","sort_by","htmlFor","onChange","defaultProps","options","map","option","key","label","ReleaseYear","releaseYear","start","end","arr","i","push","String","getYearsBetween","GenresFilter","genres","onChangeChecked","g","GenresFilter_GenreCheckbox","onGenresChange","genre","GenreCheckbox","onChangeFavorite","event","genreId","_this2","checked","_this3","genresResetChecked","GenresFilterPage","changeChecked","onGenresResetHandler","onGenresReset","getGenres","GenresFilterPage_GenresFilter_GenresFilter","connect","genresFilter","_callee","_context","_x","Filters","resetAllFilters","Filters_Select_Select","Filters_ReleaseYear_ReleaseYear","primary_release_year","Filters_FilterPagination_FilterPagination","Filters_GenresFilterPage_GenresFilterPage","with_genres","total_pages","movies","MovieItem","favorite","bookmark","showAlert","toggleAlert","changeFavoriteHandler","changeFavorite","item","changeBookmarkHandler","changeWatchlist","setRating","newRating","ratingUrl","setRatingThunk","poster_path","backdrop_path","fontWeight","title","vote_average","build_default","rating","starRatedColor","changeRating","numberOfStars","starSpacing","starDimension","Alert","cursor","xmlns","height","fill","viewBox","d","MoviesHOC","WrappedComponent","_Component","MoviesContainer","_getPrototypeOf2","_len","length","args","Array","_key","getMovies","media_type","media_id","addFavoriteUrl","account_id","addFavorite","watchlist","console","log","addWatchlist","inherits","createClass","prevProps","snapshot","movieDetails","favoriteMovies","statusCode","status_code","_ref4","_callee4","_context4","_ref5","_callee5","_context5","movie","MovieItem_MovieItem","MoviesPage","changePage","genresChange","genresReset","_this$props$moviesRed","moviesReducer","Filters_Filters","Movies_MoviesList","results","Poster","backdrop_url","backgroundImage","release_date","replaceAll","runtime","tagline","overview","ActingPage","actingUrl","movie_id","getActorsDetails","actorsDetails","cast","p","cast_id","profile_path","character","SimilarMoviesList","_this$props$movies","SimilarMoviePage","getSimilarMovies","similarMovies","changeSimilarMoviePage","SimilarMoviePage_SimilarMoviesList_SimilarMoviesList","MoviePageInfo","Table","scope","original_language","production_countries","c","budget","revenue","production_companies","TabMoviePage","activeTab","movieType","tab","_this$props$tabMovieP","tabMoviePage","Nav","tabs","NavItem","NavLink","Link","TabContent","TabPane","tabId","Row","Col","sm","TabMoviePage_MoviePageInfo_MoviePageInfo","TabMoviePage_SimilarMoviePage_SimilarMoviePage","TabMoviePage_ActingPage_ActingPage","moviePage","_x2","MoviePage","match","params","getMovieDetailsUrl","getMovieDetails","movietype","MoviePage_Poster_Poster","MoviePage_TabMoviePage_TabMoviePage","withRouter","PageNotFound","Loader","Spinner","Favorite","favUrl","getFavoriteList","personDetails","social","personFilms","PersonItem","film","PersonPage","personId","personDetailsUrl","getPersonDetail","personSocialUrl","getPersonSocial","personFilmsUrl","getPersonFilms","_this$props$personSta","personState","twitter_id","href","instagram_id","facebook_id","gender","birthday","place_of_birth","also_known_as","biography","PersonPage_PersonItem_PersonItem","personPage","App","visible","logoutUser","onDismiss","_this$props$appReduce","appReducer","components_Header_Header","Loader_Loader","react_router","exact","render","Pages_MoviesPage_MoviesPage","Pages_MoviePage_MoviePage","Pages_PersonPage_PersonPage","Pages_Favorite_Favorite","Pages_PageNotFound_PageNotFound","remove","rootReducer","combineReducers","action","objectSpread","defineProperty","toConsumableArray","index","findIndex","el","splice","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.08bccee6.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {GetAccountDetailsResponse} from '../components/Header/Login/LoginForm/LoginForm';\r\n\r\nconst axiosInstance = axios.create({\r\n    headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n    }\r\n})\r\n\r\nexport const API_URL = 'https://api.themoviedb.org/3';\r\n\r\nexport const API_KEY_3 = '74cf872c374464de94ecd087d053d256';\r\n\r\nexport const API_KEY_4 =\r\n    'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3NGNmODcyYzM3NDQ2NGRlOTRlY2QwODdkMDUzZDI1NiIsInN1YiI6IjYwNjVkMGVjZDEzMzI0MDAyOTU3YWY4OSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.xDMzqEfiTRACW-aKuOO0uQJnWFWRNvmG4B6a2rsmxyE';\r\n\r\nexport const API = {\r\n    getMovies(link: string) {\r\n        return axios.get<GetMovies>(link).then(res => res.data)\r\n    },\r\n    getGenres(link: string) {\r\n        return axios.get<{ genres: GenreResponseType[] }>(link).then(res => res.data)\r\n    },\r\n    logout(link: string, session_id: string | null) {\r\n        const data = {session_id};\r\n        return axios.delete<{ success: boolean }>(link, {data}).then(res => res.data)\r\n    },\r\n    //auth logic\r\n    getRequestToken(tokenUrl: string) {\r\n        return axios.get<GetToken>(tokenUrl).then(res => res.data)\r\n    },\r\n    createSessionWithLogin(loginUrl: string, body: CreateSessionWithLoginBody) {\r\n        return axios.post<CreateSessionWithLoginResp>(loginUrl, body).then(res => res.data)\r\n    },\r\n    createSessionId(sessionUrl: string, body: { request_token: string }) {\r\n        return axios.post<{ success: boolean, session_id: string }>(sessionUrl, body).then(res => res.data)\r\n    },\r\n\r\n    getAccountDetails(link: string) {\r\n        return axios.get<GetAccountDetailsResponse>(link).then(res => res.data)\r\n    },\r\n    getMovieDetails(link: string) {\r\n        return axios.get<GetMovieDetailsResp>(link).then(res => res.data)\r\n    },\r\n    addFavorite(link: string, body: AddFavoriteBodyType) {\r\n        return axiosInstance.post<AddFavoriteRespType>(link, body).then(res => res.data)\r\n    },\r\n    addWatchlist(link: string, body: AddWatchlistBodyType) {\r\n        return axiosInstance.post<AddFavoriteRespType>(link, body).then(res => res.data)\r\n    },\r\n    getFavoriteList(link: string) {\r\n        return axiosInstance.get<GetMovies>(link).then(res => res.data)\r\n    },\r\n    getWatchList(link: string) {\r\n        return axiosInstance.get<GetFavoriteListType>(link).then(res => res.data)\r\n    },\r\n    getActing(link: string) {\r\n        return axiosInstance.get<ActingRespType>(link).then(res => res.data)\r\n    },\r\n    setRating(link: string, body: { value: number }) {\r\n        return axiosInstance.post<{ status_code: number, status_message: string }>(link, body).then(res => res.data)\r\n    },\r\n    getSimilarMovie(link: string) {\r\n        return axiosInstance.get<GetMovies>(link).then(res => res.data)\r\n        // .catch((err) => {\r\n        //     return err.response.data.status_message;\r\n        // })\r\n    },\r\n    //PERSON PAGE\r\n    getPersonDetail(link: string) {\r\n        return axiosInstance.get<PersonDetailType>(link).then(res => res.data)\r\n    },\r\n    getPersonSocial(link: string) {\r\n        return axiosInstance.get<PersonSocialRespType>(link).then(res => res.data)\r\n    },\r\n    getPersonFilms(link: string) {\r\n        return axiosInstance.get<PersonFilmsRespType>(link).then(res => res.data)\r\n    },\r\n}\r\n\r\n// export const fetchApi = (url: string, options: any = {}) => {\r\n//     return new Promise((res, rej) => {\r\n//         fetch(url, options)\r\n//             .then(res => {\r\n//                     if (res.status < 400) {\r\n//                         return res.json();\r\n//                     } else {\r\n//                         throw res\r\n//                     }\r\n//                 }\r\n//             ).then(data => {\r\n//             res(data);\r\n//         })\r\n//             .catch(response => {\r\n//                 response.json()\r\n//                     .then((err: any) => {\r\n//                         rej(err)\r\n//                     })\r\n//             })\r\n//     })\r\n// }\r\n\r\n//TYPES\r\nexport type MovieType = {\r\n    adult: boolean\r\n    backdrop_path: string\r\n    genre_ids: Array<number>\r\n    id: number\r\n    original_language: string\r\n    original_title: string\r\n    overview: string\r\n    popularity: number\r\n    poster_path: string\r\n    release_date: string\r\n    title: string\r\n    video: false\r\n    vote_average: number\r\n    vote_count: number\r\n}\r\nexport type GetMovies = {\r\n    page: number\r\n    results: Array<MovieType>\r\n    total_pages: number\r\n    total_results: number\r\n}\r\n\r\n//Genres\r\nexport type GenreResponseType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type GenreType = {\r\n    id: number\r\n    name: string\r\n    checked: boolean\r\n}\r\nexport type GetGenres = {\r\n    genres: Array<GenreType>\r\n}\r\n\r\n//AUTH\r\nexport type GetToken = {\r\n    expires_at: string\r\n    request_token: string\r\n    success: boolean\r\n}\r\n//add favorite\r\nexport type AddFavoriteBodyType = {\r\n    media_type: string\r\n    media_id: number\r\n    favorite: boolean\r\n}\r\nexport type AddFavoriteRespType = {\r\n    status_code: number\r\n    status_message: string\r\n}\r\n//add Watchlist\r\nexport type AddWatchlistBodyType = {\r\n    media_type: string\r\n    media_id: number\r\n    watchlist: boolean\r\n}\r\n\r\n//GetFavoriteListType\r\nexport type ResultType = {\r\n    poster_path: string | null\r\n    adult: boolean\r\n    overview: string\r\n    release_date: string\r\n    genre_ids: Array<number>\r\n    id: number\r\n    original_language: string\r\n    original_title: string\r\n    title: string\r\n    backdrop_path: string | null\r\n    popularity: number\r\n    video: string\r\n    vote_average: number\r\n    vote_count: number\r\n}\r\nexport type GetFavoriteListType = {\r\n    page: number\r\n    total_pages: number\r\n    total_results: number\r\n    results: Array<ResultType>\r\n}\r\n//GetMovieDetailsResp\r\ntype ProductionCompaniesType = {\r\n    name: string\r\n    id: number\r\n    logo_path: string | null\r\n    origin_country: string\r\n}\r\ntype ProductionCountriesType = {\r\n    name: string\r\n    iso_3166_1: string\r\n}\r\ntype SpokenLanguagesType = {\r\n    iso_639_1: string\r\n    name: string\r\n}\r\nexport type GetMovieDetailsResp = {\r\n    adult: boolean\r\n    backdrop_path: string | null\r\n    belongs_to_collection: null\r\n    budget: number\r\n    genres: Array<{ id: number, name: string }>\r\n    homepage: string | null\r\n    id: number\r\n    imdb_id: string | null\r\n    original_language: string\r\n    original_title: string\r\n    overview: string | null\r\n    popularity: number\r\n    poster_path: string | null\r\n    production_companies: Array<ProductionCompaniesType>\r\n    production_countries: Array<ProductionCountriesType>\r\n    release_date: string\r\n    revenue: number\r\n    runtime: string | null\r\n    spoken_languages: Array<SpokenLanguagesType>\r\n    status: string\r\n    tagline: string | null\r\n    title: string\r\n    video: string\r\n    vote_average: number\r\n    vote_count: number\r\n}\r\n\r\n//Acting\r\nexport type CastType = {\r\n    adult: boolean\r\n    gender: null | number\r\n    id: number\r\n    known_for_department: string\r\n    name: string\r\n    original_name: string\r\n    popularity: number\r\n    profile_path: string | null\r\n    cast_id: number\r\n    character: string\r\n    credit_id: string\r\n    order: number\r\n}\r\ntype CrewType = {\r\n    adult: boolean\r\n    gender: null | number\r\n    id: number\r\n    known_for_department: string\r\n    name: string\r\n    original_name: string\r\n    popularity: number\r\n    profile_path: string | null\r\n    credit_id: string\r\n    department: string\r\n    job: string\r\n}\r\nexport type ActingRespType = {\r\n    id: number\r\n    cast: Array<CastType>\r\n    crew: Array<CrewType>\r\n}\r\n\r\n// Auth USer\r\nexport type CreateSessionWithLoginResp = {\r\n    success: boolean\r\n    expires_at: string\r\n    request_token: string\r\n}\r\nexport type CreateSessionWithLoginBody = {\r\n    request_token: string\r\n    username: string\r\n    password: string\r\n}\r\n\r\n// -----------------------PERSON PAGE----------------\r\nexport type PersonDetailType = {\r\n    birthday: null | string\r\n    known_for_department: string\r\n    deathday: null | string\r\n    id: number\r\n    name: string\r\n    also_known_as: Array<string>\r\n    gender: number\r\n    biography: string\r\n    popularity: number\r\n    place_of_birth: null | string\r\n    profile_path: null | string\r\n    adult: boolean\r\n    imdb_id: string\r\n    homepage: null | string\r\n}\r\n\r\n\r\nexport type PersonSocialRespType = {\r\n    imdb_id: string | null\r\n    facebook_id: string | null\r\n    freebase_mid: string | null\r\n    freebase_id: string | null\r\n    tvrage_id: number | string\r\n    twitter_id: string | null\r\n    id: number\r\n    instagram_id: string | null\r\n}\r\nexport type PersonCastType = {\r\n    character: string\r\n    credit_id: string\r\n    release_date: string\r\n    vote_count: number\r\n    video: boolean\r\n    adult: boolean\r\n    vote_average: number\r\n    title: string\r\n    genre_ids: Array<number>\r\n    original_language: string\r\n    original_title: string\r\n    popularity: number\r\n    id: number\r\n    backdrop_path: null | string\r\n    overview: string\r\n    poster_path: null | string\r\n}\r\nexport type PersonFilmsRespType = {\r\n    id: number\r\n    cast: Array<PersonCastType>\r\n    crew: Array<any>\r\n}\r\n","import {GetAccountDetailsResponse} from '../components/Header/Login/LoginForm/LoginForm';\r\nimport {ThunkDispatch} from 'redux-thunk';\r\nimport {AppRootStateType, TMDBActionType} from './store';\r\nimport {API, API_KEY_3, API_URL} from '../api/api';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed';\r\n\r\nconst initialState = {\r\n    user: null as null | GetAccountDetailsResponse,\r\n    session_id: null as null | string,\r\n    isAuth: false,\r\n    disabled: false,\r\n    error: null as null | string,\r\n    status: 'idle' as RequestStatusType,\r\n}\r\n\r\nexport type InitialAppStateType = typeof initialState;\r\n\r\nexport const appReducer = (state: InitialAppStateType = initialState, action: AppActionsType): InitialAppStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-USER':\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        case 'APP/SET-SESSION-ID':\r\n            return {\r\n                ...state,\r\n                session_id: action.payload\r\n            }\r\n        case 'APP/DELETE-SESSION-ID':\r\n            return {\r\n                ...state,\r\n                session_id: null\r\n            }\r\n        case 'APP/CHANGE-ISAUTH':\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload\r\n            }\r\n        case 'APP/CHANGE-DISABLED':\r\n            return {\r\n                ...state,\r\n                disabled: action.payload\r\n            }\r\n        case 'APP/SET-ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case 'APP/CHANGE-STATUS':\r\n            return {\r\n                ...state,\r\n                status: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n//user\r\nexport const setUser = (user: GetAccountDetailsResponse | null) => {\r\n    return {\r\n        type: 'APP/SET-USER',\r\n        payload: user\r\n    } as const\r\n}\r\nexport const changeStatus = (status: RequestStatusType) => {\r\n    return {\r\n        type: 'APP/CHANGE-STATUS',\r\n        payload: status\r\n    } as const\r\n}\r\nexport const setSessionId = (session_id: string) => {\r\n    return {\r\n        type: 'APP/SET-SESSION-ID',\r\n        payload: session_id\r\n    } as const\r\n}\r\nexport const setError = (error: null | string) => {\r\n    return {\r\n        type: 'APP/SET-ERROR',\r\n        payload: error\r\n    } as const\r\n}\r\nexport const changeIsAuth = (isAuth: boolean) => {\r\n    return {\r\n        type: 'APP/CHANGE-ISAUTH',\r\n        payload: isAuth\r\n    } as const\r\n}\r\nexport const changeDisabled = (disabled: boolean) => {\r\n    return {\r\n        type: 'APP/CHANGE-DISABLED',\r\n        payload: disabled\r\n    } as const\r\n}\r\nexport const deleteSessionId = () => {\r\n    return {\r\n        type: 'APP/DELETE-SESSION-ID',\r\n    } as const\r\n}\r\n\r\n\r\n//thunks\r\nexport const logoutUser = (link: string) => async (dispatch: ThunkDispatch<AppRootStateType, unknown, TMDBActionType>, getState: () => AppRootStateType) => {\r\n    const session_id = getState().app.session_id;\r\n    dispatch(changeStatus('loading'));\r\n    try {\r\n        await API.logout(link, session_id);\r\n        cookies.remove('session_id');\r\n        dispatch(changeStatus('succeeded'));\r\n        dispatch(deleteSessionId());\r\n        dispatch(setUser(null));\r\n        dispatch(changeIsAuth(false));\r\n        dispatch(changeDisabled(false));\r\n    } catch (e) {\r\n        dispatch(changeStatus('failed'));\r\n        //ser LoginForm serverError\r\n        dispatch(setError(e.response.data.status_message));\r\n\r\n        setTimeout(() => {\r\n            dispatch(setError(null));\r\n        }, 3000);\r\n    }\r\n    ;\r\n}\r\nexport const getAccountDetails = (link: string, session_id: string) => async (dispatch: ThunkDispatch<AppRootStateType, unknown, TMDBActionType>, getState: () => AppRootStateType) => {\r\n    dispatch(changeStatus('loading'));\r\n    try {\r\n        let data = await API.getAccountDetails(link);\r\n        dispatch(changeStatus('succeeded'));\r\n        dispatch(setUser(data));\r\n        dispatch(setSessionId(session_id));\r\n        dispatch(changeIsAuth(true));\r\n        // return data;\r\n    } catch (e) {\r\n        dispatch(changeStatus('failed'));\r\n        //ser LoginForm serverError\r\n        dispatch(setError(e.response.data.status_message));\r\n\r\n        setTimeout(() => {\r\n            dispatch(setError(null));\r\n        }, 3000);\r\n    }\r\n    ;\r\n}\r\n\r\n// auth user\r\nexport const userAuthFlow = (username: string, password: string) => async (dispatch: ThunkDispatch<AppRootStateType, unknown, TMDBActionType>, getState: () => AppRootStateType) => {\r\n\r\n    // Цепочка из 3 запросов на сервер\r\n    // 1 за токеном\r\n    // 2 логин + пасс + этот токен\r\n    // 3 на session\r\n\r\n    //1\r\n    dispatch(changeDisabled(true));\r\n    dispatch(changeStatus('loading'));\r\n    let tokenUrl = `${API_URL}/authentication/token/new?api_key=${API_KEY_3}`;\r\n    API.getRequestToken(tokenUrl)\r\n        .then(data => {\r\n            //2\r\n            const loginUrl = `${API_URL}/authentication/token/validate_with_login?api_key=${API_KEY_3}`;\r\n            const body = {\r\n                username,\r\n                password,\r\n                request_token: data.request_token\r\n            }\r\n            API.createSessionWithLogin(loginUrl, body)\r\n                .then(() => {\r\n                    // 3 session url\r\n                    const sessionUrl = `${API_URL}/authentication/session/new?api_key=${API_KEY_3}`;\r\n                    API.createSessionId(sessionUrl, {request_token: data.request_token})\r\n                        .then(session => {\r\n                            //cookie\r\n                            cookies.set('session_id', session.session_id, {\r\n                                path: '/',\r\n                                maxAge: 2592000\r\n                            });\r\n                            dispatch(setSessionId(session.session_id));\r\n                            const accountUrl = `${API_URL}/account?api_key=${API_KEY_3}&session_id=${session.session_id}`;\r\n                            dispatch(getAccountDetails(accountUrl, session.session_id));\r\n                        })\r\n                        .catch(e => {\r\n                            //disabled btn\r\n                            dispatch(changeDisabled(false));\r\n                            //ser LoginForm serverError\r\n                            dispatch(setError(e.response.data.status_message));\r\n\r\n                            setTimeout(() => {\r\n                                dispatch(setError(null));\r\n                            }, 3000);\r\n                        });\r\n                })\r\n                .catch(e => {\r\n                    //disabled btn\r\n                    dispatch(changeDisabled(false));\r\n                    //ser LoginForm serverError\r\n                    dispatch(setError(e.response.data.status_message));\r\n\r\n                    setTimeout(() => {\r\n                        dispatch(setError(null));\r\n                    }, 3000);\r\n                });\r\n        })\r\n        .catch(e => {\r\n            //disabled btn\r\n            dispatch(changeDisabled(false));\r\n            //ser LoginForm serverError\r\n            dispatch(setError(e.message));\r\n\r\n            setTimeout(() => {\r\n                dispatch(setError(null));\r\n            }, 3000);\r\n        })\r\n        .finally(() => {\r\n            dispatch(changeStatus('succeeded'));\r\n        });\r\n}\r\n\r\n//types\r\ntype SetUserAC = ReturnType<typeof setUser>\r\ntype SetSessionIdAC = ReturnType<typeof setSessionId>\r\ntype DeleteSessionIdAC = ReturnType<typeof deleteSessionId>\r\ntype ChangeIsAuthAC = ReturnType<typeof changeIsAuth>\r\ntype ChangeDisabledAC = ReturnType<typeof changeDisabled>\r\ntype SetErrorAC = ReturnType<typeof setError>\r\ntype ChangeStatusAC = ReturnType<typeof changeStatus>\r\n\r\nexport type AppActionsType =\r\n    SetUserAC\r\n    | SetSessionIdAC\r\n    | DeleteSessionIdAC\r\n    | ChangeIsAuthAC\r\n    | ChangeDisabledAC\r\n    | SetErrorAC\r\n    | ChangeStatusAC;","import React from 'react';\r\nimport {Form, FormGroup, Input, Label} from 'reactstrap';\r\nimport {useFormik} from 'formik';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../../Store/store';\r\nimport {userAuthFlow} from '../../../../Store/appReducer';\r\n\r\nexport type GetAccountDetailsResponse = {\r\n    avatar: {\r\n        gravatar: {\r\n            hash: string\r\n        },\r\n        tmdb: {\r\n            avatar_path: null | string\r\n        }\r\n    }\r\n    id: number\r\n    iso_639_1: string\r\n    iso_3166_1: string\r\n    name: string\r\n    include_adult: boolean\r\n    username: string\r\n}\r\n\r\ntype LoginFormValues = {\r\n    username: string\r\n    password: string\r\n    repeatPassword: string\r\n}\r\ntype LoginFormErrorsValues = {\r\n    username?: string\r\n    password?: string\r\n    repeatPassword?: string\r\n}\r\n\r\nconst validate = (values: LoginFormValues) => {\r\n    const errors: LoginFormErrorsValues = {}\r\n\r\n    if (!values.username) {\r\n        errors.username = 'Required';\r\n    }\r\n\r\n    if (!values.password) {\r\n        errors.password = 'Required';\r\n    }\r\n    if (!values.repeatPassword) {\r\n        errors.repeatPassword = 'Required';\r\n    } else if (values.password !== values.repeatPassword) {\r\n        errors.repeatPassword = ' Passwords are not equal'\r\n    }\r\n    return errors;\r\n};\r\n\r\n// FUNCTIONAL COMPONENT USE  FORM\r\ntype LoginFormPropsType = {\r\n    // userAuthFlow?: (username: string, password: string) => void\r\n    // disabled?: boolean\r\n    // error?: null | string\r\n    toggleModal?: () => void\r\n\r\n}\r\nconst LoginForm: React.FC<LoginFormPropsType> = ({toggleModal}) => {\r\n    const dispatch = useDispatch();\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.app.error);\r\n    const disabled = useSelector<AppRootStateType, boolean>(state => state.app.disabled);\r\n\r\n//Formik\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            username: '',\r\n            password: '',\r\n            repeatPassword: '',\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            dispatch(userAuthFlow(values.username, values.password));\r\n            toggleModal && toggleModal();\r\n            // userAuthFlow && userAuthFlow(values.username, values.password)\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div className={'form-login-container'}>\r\n            <h1 className={'h3 mb-3 text-center'}>Авторизация</h1>\r\n            <Form className={'form-login'} onSubmit={formik.handleSubmit}>\r\n                <FormGroup className={'form-group'}>\r\n                    <Label for=\"username\">Email</Label>\r\n                    <Input type=\"text\" id=\"username\" placeholder=\"username\" {...formik.getFieldProps('username')}\r\n                           className={'form-control'}\r\n                           style={formik.touched.username && formik.errors.username ? {border: '2px solid red'} : undefined}/>\r\n                    {formik.touched.username && formik.errors.username ?\r\n                        <div style={{color: 'red'}}>{formik.errors.username}</div> : null}\r\n                </FormGroup>\r\n                <FormGroup className={'form-group'}>\r\n                    <Label for=\"password\">Password</Label>\r\n                    <Input type=\"password\" id=\"password\" placeholder=\"password\"\r\n                           {...formik.getFieldProps('password')} className={'form-control'}\r\n                           style={formik.touched.password && formik.errors.password ? {border: '2px solid red'} : undefined}/>\r\n                    {formik.touched.password && formik.errors.password ?\r\n                        <div style={{color: 'red'}}>{formik.errors.password}</div> : null}\r\n                </FormGroup>\r\n                <FormGroup className={'form-group'}>\r\n                    <Label for=\"repeatPassword\">Repeat Password</Label>\r\n                    <Input type=\"password\" id=\"repeatPassword\"\r\n                           placeholder=\"repeatPassword\" {...formik.getFieldProps('repeatPassword')}\r\n                           className={'form-control'}\r\n                           style={formik.touched.repeatPassword && formik.errors.repeatPassword ? {border: '2px solid red'} : undefined}\r\n                    />\r\n                    {formik.touched.repeatPassword && formik.errors.repeatPassword ?\r\n                        <div style={{color: 'red'}}>{formik.errors.repeatPassword}</div> : null}\r\n                </FormGroup>\r\n                <button type=\"submit\" className={'btn btn-ld btn-primary btn-block'} disabled={disabled}>Submit</button>\r\n                {error ? <div style={{color: 'red'}} className={'mt-3 text-center'}>{error}</div> : null}\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React, {PureComponent} from 'react';\r\nimport {Modal, ModalBody,} from 'reactstrap';\r\nimport LoginForm from './LoginForm/LoginForm';\r\n\r\ntype LoginPropsType = {}\r\n\r\n\r\nclass Login extends PureComponent<LoginPropsType, { showModal: boolean }> {\r\n    constructor(props: LoginPropsType) {\r\n        super(props)\r\n        this.state = {\r\n            showModal: false\r\n        }\r\n    }\r\n\r\n    //modal\r\n    toggleModal = () => {\r\n        this.setState(prevState => ({\r\n            showModal: !prevState.showModal\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"button\" onClick={this.toggleModal}>Login\r\n                </button>\r\n                <Modal isOpen={this.state.showModal} toggle={this.toggleModal}>\r\n                    <ModalBody>\r\n                        <LoginForm/>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\nimport {GetAccountDetailsResponse} from '../Login/LoginForm/LoginForm';\r\n\r\ntype UserHeaderAvatarPropsType = {\r\n    user: GetAccountDetailsResponse | null\r\n}\r\n\r\nclass UserHeaderAvatar extends Component<UserHeaderAvatarPropsType> {\r\n    render() {\r\n        const {user} = this.props;\r\n        return (\r\n            <>\r\n                {/*<img width='40' src={`https://www.gravatar.com/avatar/${user ? user.avatar.gravatar.hash : null}.jpg?s64`} alt=\"user_Avatar\"/>*/}\r\n                <img width='60'\r\n                     src={`https://image.tmdb.org/t/p/original/${user ? user.avatar.tmdb.avatar_path : null}?s64`}\r\n                     alt=\"user_Avatar\" className={'rounded-circle'}/>\r\n                <span style={{color: 'red'}} className={'ml-3'}>{user ? user.username : null}</span>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserHeaderAvatar;","import React, {Component} from 'react';\r\nimport {GetAccountDetailsResponse} from '../Login/LoginForm/LoginForm';\r\nimport {Dropdown, DropdownItem, DropdownMenu, DropdownToggle} from 'reactstrap';\r\nimport UserHeaderAvatar from '../UserHeaderAvatar/UserHeaderAvatar';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype UserDropDownMenuProps = {\r\n    user: GetAccountDetailsResponse | null\r\n    onDeleteSession: () => void\r\n}\r\n\r\nclass UserDropDownMenu extends Component<UserDropDownMenuProps, { dropdownOpen: boolean }> {\r\n    state = {\r\n        dropdownOpen: false\r\n    }\r\n\r\n    toggleDropdown = () => {\r\n        this.setState(prevState => ({\r\n            dropdownOpen: !prevState.dropdownOpen\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const {user, onDeleteSession} = this.props;\r\n        return <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggleDropdown}>\r\n            <DropdownToggle\r\n                tag=\"div\"\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded={this.state.dropdownOpen}\r\n            >\r\n                <UserHeaderAvatar user={user}/>\r\n            </DropdownToggle>\r\n            <DropdownMenu right={true}>\r\n                <DropdownItem onClick={onDeleteSession}>Logout</DropdownItem>\r\n                <DropdownItem  onClick={() => {\r\n                }}>\r\n                    <NavLink to={'/favorite'} style={{textDecoration:'none', color:'black'}}>\r\n                        Favorite\r\n                    </NavLink>\r\n                </DropdownItem>\r\n            </DropdownMenu>\r\n        </Dropdown>\r\n    }\r\n}\r\n\r\nexport default UserDropDownMenu;","import React, {PureComponent} from 'react';\r\nimport Login from './Login/Login';\r\nimport {GetAccountDetailsResponse} from './Login/LoginForm/LoginForm';\r\nimport UserDropDownMenu from './UserDropDownMenu/UserDropDownMenu';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype HeaderPropsType = {\r\n    user: GetAccountDetailsResponse | null\r\n    onDeleteSession: () => void\r\n}\r\n\r\nclass Header extends PureComponent<HeaderPropsType> {\r\n\r\n    render() {\r\n        const {user, onDeleteSession} = this.props;\r\n        return (\r\n            <nav className={'navbar navbar-dark bg-dark'}>\r\n                <div className=\"container\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item active\">\r\n                            <NavLink to={'/'} className={'nav-link'}>\r\n                                Home\r\n                            </NavLink>\r\n                        </li>\r\n                    </ul>\r\n                    {user ?\r\n                        <UserDropDownMenu user={user} onDeleteSession={onDeleteSession}/>\r\n                        : <Login/>\r\n                    }\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\ntype TotalPagesPropsType = {\r\n    page: number\r\n    totalPages: null | number\r\n}\r\nconst TotalPages: React.FC<TotalPagesPropsType> = React.memo(({totalPages, page}) => {\r\n    return (\r\n        <div className={'ml-1'}>\r\n            <span className={'ml-3'}\r\n                  style={{display: 'inline-block', paddingTop: '6px'}}>Page <b>{page}</b> of <b>{totalPages}</b></span>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default TotalPages;","import React, {Component} from 'react';\r\nimport TotalPages from '../TotalPages/TotalPages';\r\n\r\ntype FilterPaginationPropsType = {\r\n    page: number\r\n    onChangePage: (value: number) => void\r\n    totalPages:number\r\n}\r\n\r\nclass FilterPagination extends Component<FilterPaginationPropsType, {}> {\r\n    render() {\r\n        const {page, onChangePage,totalPages} = this.props;\r\n        return <div className=\"btn-group row\" role=\"group\" aria-label=\"Basic example\">\r\n           <div className={''} >\r\n               <button type=\"button\" className=\"btn btn-dark mr-2\" onClick={() => onChangePage(page - 1)}\r\n                       disabled={page === 1}>Назад\r\n               </button>\r\n               <button type=\"button\" className=\"btn btn-dark\" onClick={() => onChangePage(page + 1)}\r\n                       disabled={page >= totalPages}>Вперед\r\n               </button>\r\n           </div>\r\n            <TotalPages page={page} totalPages={totalPages}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default FilterPagination;","import React, {ChangeEvent, Component} from 'react';\r\nimport {FilterType, Sort_By_type} from '../../App';\r\n\r\ntype SelectPropsType = {\r\n    changeFilters: (value: Sort_By_type, name: string) => void;\r\n    filters: FilterType\r\n}\r\n\r\ntype DefaultProps = {\r\n    options: Array<{ label: string, value: string }>\r\n}\r\n\r\nclass Select extends Component<SelectPropsType, {}> {\r\n    static defaultProps: DefaultProps = {\r\n        options: [\r\n            {label: 'Популярные по убыванию', value: 'popularity.desc'},\r\n            {label: 'Популярные по возростанию', value: 'popularity.asc'},\r\n            {label: 'Рейтинг по убыванию', value: 'vote_average.desc'},\r\n            {label: 'Рейтинг по возростанию', value: 'vote_average.asc'},\r\n        ]\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<SelectPropsType>, nextState: Readonly<{}>, nextContext: any): boolean {\r\n        if (this.props.filters.sort_by !== nextProps.filters.sort_by) {\r\n            return true\r\n        } else return false;\r\n    }\r\n\r\n    selectValue = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        this.props.changeFilters(e.target.value as Sort_By_type, e.target.name);\r\n    }\r\n\r\n    render() {\r\n        const {filters} = this.props;\r\n        return <div className=\"form-group\">\r\n            <label htmlFor=\"sort_by\">Сортировать по:</label>\r\n            <select className=\"form-control\" id=\"sort_by\" name=\"sort_by\" onChange={this.selectValue}\r\n                // defaultValue={filters.sort_by}\r\n                    value={filters.sort_by}\r\n            >\r\n                {\r\n                    Select.defaultProps.options.map(option => <option value={option.value}\r\n                                                                      key={option.value}>{option.label}</option>)\r\n                }\r\n\r\n            </select>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Select;","import React, {ChangeEvent, PureComponent} from 'react';\r\n\r\ntype ReleaseYearPropsType = {\r\n    releaseYear: string\r\n    changeFilters: (value: string, name: string) => void;\r\n}\r\n\r\nfunction getYearsBetween(start: number, end: number) {\r\n    let arr = [];\r\n    for (let i = start; i <= end; i++) {\r\n        arr.push({label: String(i), value: String(i)})\r\n    }\r\n    return arr;\r\n}\r\n\r\ntype DefaultProps = {\r\n    options: Array<{ label: string, value: string }>\r\n}\r\n\r\nclass ReleaseYear extends PureComponent<ReleaseYearPropsType, {}> {\r\n    static defaultProps: DefaultProps = {\r\n        options: getYearsBetween(1950, 2025)\r\n    }\r\n\r\n    selectValue = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        this.props.changeFilters(e.target.value, e.target.name);\r\n    }\r\n\r\n    render() {\r\n        const {releaseYear} = this.props;\r\n        return (\r\n            <div className='form-group'>\r\n                <label htmlFor=\"primary_release_year\">Сортировать по году выпуска:</label>\r\n                <select className=\"form-control\" id=\"primary_release_year\" name=\"primary_release_year\"\r\n                        onChange={this.selectValue}\r\n                        value={releaseYear}\r\n                >\r\n                    {\r\n                        ReleaseYear.defaultProps.options.map(option => <option value={option.value}\r\n                                                                               key={option.value}>{option.label}</option>)\r\n                    }\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ReleaseYear;","import React, {ChangeEvent, Component, PureComponent} from 'react';\r\nimport {GenreType} from '../../../../api/api';\r\n\r\ntype GenresFilterPropsType = {\r\n    genres: Array<GenreType>\r\n    onGenresChange: (genreId: string) => void\r\n    onChangeChecked: (genreId: number, checked: boolean) => void\r\n}\r\n\r\nclass GenresFilter extends PureComponent<GenresFilterPropsType, {}> {\r\n\r\n    render() {\r\n        const {genres, onChangeChecked} = this.props;\r\n        return (\r\n            <div className='form-group mt-3'>\r\n                {genres.map(g => <GenreCheckbox\r\n                    onGenresChange={this.props.onGenresChange}\r\n                    genre={g} key={g.id}\r\n                    onChangeChecked={onChangeChecked}\r\n                />)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\ntype GenreCheckboxPropsType = {\r\n    onGenresChange: (genreId: string) => void\r\n    genre: GenreType\r\n    onChangeChecked: (genreId: number, checked: boolean) => void\r\n}\r\n\r\nclass GenreCheckbox extends Component<GenreCheckboxPropsType, {}> {\r\n\r\n    onChangeFavorite = (event: ChangeEvent<HTMLInputElement>, genreId: number) => {\r\n        this.props.onGenresChange(event.target.name);\r\n        this.props.onChangeChecked(genreId, event.target.checked);\r\n        // this.setState({\r\n        //     checked: event.target.checked\r\n        // })\r\n    };\r\n\r\n    render() {\r\n        const g = this.props.genre;\r\n\r\n        return <div className=\"form-check\">\r\n            <input className=\"form-check-input\" type=\"checkbox\"\r\n                   checked={this.props.genre.checked}\r\n                   id={String(g.id)} name={String(g.id)}\r\n                   onChange={(e) => this.onChangeFavorite(e, g.id)}/>\r\n            <label className=\"form-check-label\" htmlFor={String(g.id)}>\r\n                {g.name}\r\n            </label>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nexport default GenresFilter;","import {API, GenreResponseType, GenreType} from '../api/api';\r\nimport {ThunkDispatch} from 'redux-thunk';\r\nimport {AppRootStateType, TMDBActionType} from './store';\r\nimport {changeStatus, setError} from './appReducer';\r\n\r\nconst initialState = {\r\n    genres: [] as Array<GenreType>\r\n}\r\n\r\nexport type InitialGenresFilterStateType = typeof initialState;\r\n\r\nexport const genresFilterReducer = (state: InitialGenresFilterStateType = initialState, action: GenresFilterActionsType): InitialGenresFilterStateType => {\r\n    switch (action.type) {\r\n        case 'GENRES/SET-GENRES':\r\n            return {\r\n                ...state,\r\n                genres: action.payload.map(g => ({...g, checked: false}))\r\n            }\r\n        case 'GENRES/CHANGE-CHECKED':\r\n            return {\r\n                ...state,\r\n                genres: state.genres.map(g => g.id === action.payload.genreId ? ({\r\n                    ...g,\r\n                    checked: action.payload.checked\r\n                }) : g)\r\n            }\r\n        case 'GENRES/RESET-CHECKED':\r\n            return {\r\n                ...state,\r\n                genres: state.genres.map(g => ({...g, checked: false}))\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n//actions\r\nexport const setGenres = (genres: Array<GenreResponseType>) => {\r\n    return {\r\n        type: 'GENRES/SET-GENRES',\r\n        payload: genres\r\n    } as const;\r\n}\r\nexport const changeChecked = (genreId: number, checked: boolean) => {\r\n    return {\r\n        type: 'GENRES/CHANGE-CHECKED',\r\n        payload: {\r\n            genreId,\r\n            checked\r\n        }\r\n    } as const;\r\n}\r\nexport const genresResetChecked = () => {\r\n    return {\r\n        type: 'GENRES/RESET-CHECKED',\r\n    } as const;\r\n}\r\n\r\n//thunks\r\nexport const getGenres = (link: string) => async (dispatch: ThunkDispatch<AppRootStateType, unknown, TMDBActionType>) => {\r\n    dispatch(changeStatus('loading'));\r\n    try {\r\n        const res = await API.getGenres(link)\r\n        dispatch(changeStatus('succeeded'));\r\n        dispatch(setGenres(res.genres));\r\n    } catch (e) {\r\n        //ser LoginForm serverError\r\n        dispatch(changeStatus('failed'));\r\n        dispatch(setError(e.response.data.status_message));\r\n\r\n        // setTimeout(() => {\r\n        //     dispatch(setError(null));\r\n        // }, 3000);\r\n    };\r\n}\r\n\r\n\r\n//types\r\ntype SetGenresAC = ReturnType<typeof setGenres>;\r\ntype ChangeCheckedAC = ReturnType<typeof changeChecked>;\r\ntype GenresResetCheckedAC = ReturnType<typeof genresResetChecked>;\r\n\r\nexport type GenresFilterActionsType = SetGenresAC | ChangeCheckedAC | GenresResetCheckedAC;\r\n","import React, {PureComponent} from 'react';\r\nimport {API_KEY_3, API_URL, GenreType} from '../../../api/api';\r\nimport GenresFilter from './GenresFilter/GenresFilter';\r\nimport {connect} from 'react-redux';\r\nimport {AppRootStateType} from '../../../Store/store';\r\nimport {changeChecked, genresResetChecked, getGenres} from '../../../Store/genresFilterReducer';\r\n\r\ntype GenresFilterPagePropsType = {\r\n    onGenresChange: (genreId: string) => void\r\n    onGenresReset: () => void\r\n} & MapDispatchToProps & MapStateToProps;\r\n\r\n\r\nclass GenresFilterPage extends PureComponent<GenresFilterPagePropsType> {\r\n\r\n    componentDidMount() {\r\n        const link = `${API_URL}/genre/movie/list?api_key=${API_KEY_3}&language=ru-RU`;\r\n        this.props.getGenres(link);\r\n    }\r\n\r\n    onChangeChecked = (genreId: number, checked: boolean) => {\r\n        this.props.changeChecked(genreId, checked);\r\n    }\r\n    onGenresResetHandler = () => {\r\n        this.props.onGenresReset();\r\n        this.props.genresResetChecked();\r\n    }\r\n\r\n    render() {\r\n        const {onGenresChange,} = this.props;\r\n        return (\r\n            <div>\r\n                <button type=\"button\" className=\"btn btn-info mt-3 \" style={{width: '100%'}}\r\n                        onClick={this.onGenresResetHandler}>Показать все жанры\r\n                </button>\r\n                <GenresFilter genres={this.props.genres} onGenresChange={onGenresChange}\r\n                              onChangeChecked={this.onChangeChecked}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\ntype MapStateToProps = {\r\n    genres: Array<GenreType>\r\n}\r\nconst mapStateToProps = (state: AppRootStateType): MapStateToProps => {\r\n    return {\r\n        genres: state.genresFilter.genres\r\n    }\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    getGenres: (link: string) => void\r\n    changeChecked: (genreId: number, checked: boolean) => void\r\n    genresResetChecked: () => void\r\n}\r\n\r\nexport default connect<MapStateToProps, MapDispatchToProps, {}, AppRootStateType>(mapStateToProps, {\r\n    getGenres,\r\n    changeChecked,\r\n    genresResetChecked\r\n})(GenresFilterPage);","import React from 'react';\r\nimport {FilterType} from '../App';\r\nimport FilterPagination from './FilterPagination/FilterPagination';\r\nimport Select from './Select/Select';\r\nimport ReleaseYear from './ReleaseYear/ReleaseYear';\r\nimport GenresFilterPage from './GenresFilterPage/GenresFilterPage';\r\n\r\ntype FiltersType = {\r\n    filters: FilterType\r\n    changeFilters: (value: string, name: string) => void;\r\n    page: number\r\n    onChangePage: (value: number) => void\r\n    totalPages:  number\r\n    resetAllFilters: () => void\r\n    onGenresChange : (genreId: string) => void\r\n    onGenresReset : () => void\r\n}\r\n\r\nexport default class Filters extends React.Component<FiltersType, {}> {\r\n\r\n    render() {\r\n        const {page, onChangePage, filters, changeFilters, totalPages, resetAllFilters, onGenresChange, onGenresReset} = this.props;\r\n        return (\r\n            <form className=\"mb-3 \">\r\n                <Select changeFilters={changeFilters} filters={filters}/>\r\n                <ReleaseYear releaseYear={filters.primary_release_year} changeFilters={changeFilters}/>\r\n                <FilterPagination page={page} onChangePage={onChangePage} totalPages={totalPages}/>\r\n                <GenresFilterPage onGenresChange={onGenresChange} onGenresReset={onGenresReset}/>\r\n                <button type=\"button\" className=\"btn btn-info mt-3 \" style={{width: '100%'}}\r\n                        onClick={resetAllFilters}>Сбросить фильтры\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import {API, MovieType} from '../api/api';\r\nimport {ThunkDispatch} from 'redux-thunk';\r\nimport {AppRootStateType, TMDBActionType} from './store';\r\nimport {FilterType} from '../components/App';\r\nimport {changeStatus, setError} from './appReducer';\r\n\r\nconst initialState = {\r\n    filters: {\r\n        sort_by: 'popularity.desc',\r\n        primary_release_year: '2021',\r\n        with_genres: []\r\n    } as FilterType,\r\n    page: 1,\r\n    total_pages: 0 ,\r\n    movies: [] as Array<MovieType>\r\n}\r\n\r\nexport type InitialMoviesStateType = typeof initialState;\r\n\r\n\r\n\r\n\r\nexport const moviesReducer = (state: InitialMoviesStateType = initialState, action: MoviesActionsType): InitialMoviesStateType => {\r\n    switch (action.type) {\r\n        case 'MOVIES/SET-MOVIES':\r\n            return {\r\n                ...state,\r\n                movies: action.payload\r\n            }\r\n        case 'APP/CHANGE-FILTERS':\r\n            return {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    [action.payload.name]: action.payload.value\r\n                }\r\n            }\r\n        case 'APP/CHANGE-PAGE':\r\n            return {\r\n                ...state,\r\n                page: action.payload\r\n            }\r\n        case 'APP/SET-TOTAl-PAGES':\r\n            return {\r\n                ...state,\r\n                total_pages: action.payload\r\n            }\r\n        case 'APP/RESET-ALL-FILTERS':\r\n            let filters: FilterType = {\r\n                sort_by: 'popularity.desc',\r\n                primary_release_year: '2021',\r\n                with_genres: []\r\n            }\r\n            return {\r\n                ...state,\r\n                filters: {...state.filters, ...filters},\r\n                page: 1\r\n            }\r\n        case 'APP/RESET-GENRES':\r\n            return {\r\n                ...state,\r\n                filters: {...state.filters, with_genres: []}\r\n            }\r\n        case 'APP/CHANGE-GENRES':\r\n            let genres: Array<string> = [...state.filters.with_genres];\r\n\r\n            let index = genres.findIndex(el => el === action.payload)\r\n            if (index === -1) {\r\n                genres.push(action.payload)\r\n            } else {\r\n                genres.splice(index, 1)\r\n            }\r\n            return {\r\n                ...state,\r\n                filters: {\r\n                    ...state.filters,\r\n                    with_genres: genres\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n//actions\r\nexport const changeFilters = (value: string, name: string) => {\r\n    return {\r\n        type: 'APP/CHANGE-FILTERS',\r\n        payload: {\r\n            value,\r\n            name\r\n        }\r\n    } as const;\r\n}\r\nexport const changePage = (page: number) => {\r\n    return {\r\n        type: 'APP/CHANGE-PAGE',\r\n        payload: page\r\n    } as const\r\n}\r\nexport const setTotalPages = (pages: number) => {\r\n    return {\r\n        type: 'APP/SET-TOTAl-PAGES',\r\n        payload: pages\r\n    } as const\r\n}\r\nexport const resetAllFilters = () => {\r\n    return {\r\n        type: 'APP/RESET-ALL-FILTERS',\r\n    } as const\r\n}\r\nexport const genresChange = (genreId: string) => {\r\n    return {\r\n        type: 'APP/CHANGE-GENRES',\r\n        payload: genreId\r\n    } as const\r\n}\r\nexport const genresReset = () => {\r\n    return {\r\n        type: 'APP/RESET-GENRES',\r\n    } as const\r\n}\r\n//user\r\nexport const setMovies = (movies: Array<MovieType>) => {\r\n    return {\r\n        type: 'MOVIES/SET-MOVIES',\r\n        payload: movies\r\n    } as const;\r\n}\r\n\r\n//thunks\r\nexport const getMovies = (link: string) => async (dispatch: ThunkDispatch<AppRootStateType, unknown, TMDBActionType>) => {\r\n    dispatch(changeStatus('loading'));\r\n    try {\r\n        let data = await API.getMovies(link)\r\n        dispatch(changeStatus('succeeded'));\r\n        dispatch(setTotalPages(data.total_pages));\r\n        dispatch(setMovies(data.results));\r\n    } catch (e) {\r\n        //ser LoginForm serverError\r\n        dispatch(changeStatus('failed'));\r\n        dispatch(setError(e.response.data.status_message));\r\n        //\r\n        // setTimeout(() => {\r\n        //     dispatch(setError(null));\r\n        // }, 3000);\r\n    };\r\n}\r\n\r\n\r\n//types\r\ntype SetMoviesAC = ReturnType<typeof setMovies>\r\ntype ChangeFiltersAC = ReturnType<typeof changeFilters>\r\ntype ChangePageAC = ReturnType<typeof changePage>\r\ntype SetTotalPagesAC = ReturnType<typeof setTotalPages>\r\ntype ResetAllFiltersAC = ReturnType<typeof resetAllFilters>\r\ntype GenresResetAC = ReturnType<typeof genresReset>\r\ntype GenresChangeAC = ReturnType<typeof genresChange>\r\n\r\n\r\nexport type MoviesActionsType =\r\n    SetMoviesAC\r\n    | ChangeFiltersAC\r\n    | ChangePageAC\r\n    | SetTotalPagesAC\r\n    | ResetAllFiltersAC\r\n    | GenresResetAC\r\n    | GenresChangeAC;\r\n","import React from 'react';\r\nimport {API_KEY_3, API_URL, MovieType} from '../../api/api';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Alert, Modal, ModalBody} from 'reactstrap';\r\nimport LoginForm from '../Header/Login/LoginForm/LoginForm';\r\n// @ts-ignore\r\nimport StarRatings from 'react-star-ratings';\r\n\r\n\r\ntype MovieItemPropsType = {\r\n    item: MovieType\r\n    changeFavorite: (media_type: string, favorite: boolean, media_id: number) => void\r\n    changeWatchlist: (media_type: string, watchlist: boolean, media_id: number) => void\r\n    account_id: number | null\r\n    session_id: string | null\r\n    isAuth: boolean\r\n    setRatingThunk: (link: string, body: { value: number }) => void\r\n}\r\n\r\n\r\nexport default class MovieItem extends React.Component<MovieItemPropsType, { favorite: boolean, bookmark: boolean, showModal: boolean, showAlert: boolean }> {\r\n\r\n    state = {\r\n        favorite: false,\r\n        bookmark: false,\r\n        showModal: false,\r\n        showAlert: false\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState(prevState => ({\r\n            showModal: !prevState.showModal\r\n        }))\r\n    }\r\n    toggleAlert = () => {\r\n        this.setState(prevState => ({\r\n            showAlert: !prevState.showAlert\r\n        }))\r\n        setTimeout(()=>{\r\n            this.setState({\r\n                showAlert:false\r\n            })\r\n        }, 2000)\r\n    }\r\n    changeFavoriteHandler = () => {\r\n        if (!this.props.isAuth) {\r\n            this.toggleModal();\r\n        } else {\r\n            this.setState(prevState => ({\r\n                favorite: !prevState.favorite\r\n            }), () => {\r\n                this.props.changeFavorite('movie', this.state.favorite, this.props.item.id);\r\n            })\r\n        }\r\n    }\r\n\r\n    changeBookmarkHandler = () => {\r\n        if (!this.props.isAuth) {\r\n            this.toggleModal();\r\n        } else {\r\n            this.setState(prevState => ({\r\n                bookmark: !prevState.bookmark\r\n            }), () => {\r\n                this.props.changeWatchlist('movie', this.state.bookmark, this.props.item.id);\r\n            })\r\n        }\r\n    }\r\n\r\n    setRating = (newRating: number, name: any) => {\r\n        if (!this.props.isAuth) {\r\n            this.toggleModal();\r\n        } else {\r\n\r\n            const ratingUrl = `${API_URL}/movie/${this.props.item.id}/rating?api_key=${API_KEY_3}&session_id=${this.props.session_id}`;\r\n            this.props.setRatingThunk(ratingUrl, {value: newRating});\r\n            this.toggleAlert();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {item} = this.props;\r\n        return (\r\n            <>\r\n                {\r\n                    this.state.showModal && !this.props.isAuth\r\n                        ? <Modal isOpen={this.state.showModal} toggle={this.toggleModal}>\r\n                            <ModalBody>\r\n                                <LoginForm/>\r\n                            </ModalBody>\r\n                        </Modal>\r\n                        : ''\r\n                }\r\n                <div className=\"card \" style={{width: '100%'}}>\r\n                    <NavLink to={`/movie/${item.id}`}>\r\n                        <img\r\n                            className=\"card-img-top card-img--height\"\r\n                            src={item.poster_path ||\r\n                            item.backdrop_path ? `https://image.tmdb.org/t/p/w500${item.poster_path ||\r\n                            item.backdrop_path}` : 'https://static.wikia.nocookie.net/nopixel/images/b/b4/Not-found-image-15383864787lu.jpg/revision/latest?cb=20200910062142'}\r\n                            alt=\"\"\r\n                        />\r\n                    </NavLink>\r\n                    <div className=\"card-body\">\r\n                        <h6 className=\"card-title\" style={{fontWeight:'bold'}}>{item.title}</h6>\r\n                        {/*<div className=\"card-text\"><b>Описание</b>: {item.overview}</div>*/}\r\n                        <div className=\"card-text\"><b>Рейтинг</b>: {item.vote_average}</div>\r\n                        <div className=\"card-text\">\r\n                            <StarRatings\r\n                                id={'rating'}\r\n                                rating={item.vote_average}\r\n                                starRatedColor=\"blue\"\r\n                                changeRating={this.setRating}\r\n                                numberOfStars={10}\r\n                                name='rating'\r\n                                starSpacing=\"1px\"\r\n                                starDimension='15px'\r\n                            />\r\n                            <Alert color=\"success\" isOpen={this.state.showAlert} toggle={this.toggleAlert} className={'rating__alert'}>\r\n                                <h4 className=\"alert-heading\">Success!</h4>\r\n                               Ваша оценка фильма сохранена.\r\n                            </Alert>\r\n                        </div>\r\n                        <div className=\"card-text d-inline-block float-right pl-1\">\r\n                            {/*<b>Watchlist </b>*/}\r\n                            {this.state.bookmark\r\n                                ? <svg onClick={this.changeBookmarkHandler} style={{cursor: 'pointer'}}\r\n                                       xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n                                       className=\"bi bi-bookmark-fill\" viewBox=\"0 0 16 16\">\r\n                                    <path\r\n                                        d=\"M2 2v13.5a.5.5 0 0 0 .74.439L8 13.069l5.26 2.87A.5.5 0 0 0 14 15.5V2a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2z\"/>\r\n                                </svg>\r\n                                : <svg onClick={this.changeBookmarkHandler} style={{cursor: 'pointer'}}\r\n                                       xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n                                       className=\"bi bi-bookmark\" viewBox=\"0 0 16 16\">\r\n                                    <path\r\n                                        d=\"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z\"/>\r\n                                </svg>\r\n                            }\r\n                        </div>\r\n                        <div className=\"card-text d-inline-block float-right\">\r\n                            {/*<b>Favorite </b>*/}\r\n                            {this.state.favorite\r\n                                ? <svg onClick={this.changeFavoriteHandler} style={{cursor: 'pointer'}}\r\n                                       xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"\r\n                                       fill=\"currentColor\"\r\n                                       className=\"bi bi-star-fill\" viewBox=\"0 0 16 16\">\r\n                                    <path\r\n                                        d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/>\r\n                                </svg>\r\n                                : <svg onClick={this.changeFavoriteHandler} style={{cursor: 'pointer'}}\r\n                                       xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"\r\n                                       fill=\"currentColor\"\r\n                                       className=\"bi bi-star\" viewBox=\"0 0 16 16\">\r\n                                    <path\r\n                                        d=\"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z\"/>\r\n                                </svg>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {AddFavoriteBodyType, AddWatchlistBodyType, API_KEY_3, API_URL, MovieType} from '../../api/api';\r\nimport {FilterType} from '../App';\r\n\r\n\r\ntype MoviesContainerType = {\r\n    filters: FilterType\r\n    page: number\r\n    onChangePage: (value: number) => void\r\n    movies: Array<MovieType>\r\n    getMovies: (link: string) => void\r\n    session_id: null | string\r\n    addFavorite: (link: string, body: AddFavoriteBodyType) => void\r\n    addWatchlist: (link: string, body: AddWatchlistBodyType) => void\r\n    account_id: number | null\r\n    isAuth: boolean\r\n    setRatingThunk: (link: string, body: { value: number }) => void\r\n}\r\n\r\n\r\nfunction MoviesHOC<T>(WrappedComponent: React.ComponentType<T>) {\r\n    return class MoviesContainer extends Component <MoviesContainerType, {}> {\r\n\r\n        getMovies = (page: number, primary_release_year: string = '', genres: Array<string> = ['']) => {\r\n            const link = `${API_URL}/discover/movie?api_key=${API_KEY_3}&language=ru-RU&sort_by=${this.props.filters.sort_by}&page=${page}&primary_release_year=${primary_release_year}&with_genres=${genres}`;\r\n            this.props.getMovies(link);\r\n        }\r\n\r\n        changeFavorite = (media_type: string, favorite: boolean, media_id: number) => {\r\n            const addFavoriteUrl = `${API_URL}/account/${this.props.account_id}/favorite?api_key=${API_KEY_3}&session_id=${this.props.session_id}`;\r\n            const body = {\r\n                media_type: 'movie',\r\n                media_id: media_id,\r\n                favorite\r\n            }\r\n            this.props.addFavorite(addFavoriteUrl, body);\r\n        }\r\n        changeWatchlist = (media_type: string, watchlist: boolean, media_id: number) => {\r\n            console.log(media_type, watchlist, media_id)\r\n            const addFavoriteUrl = `${API_URL}/account/${this.props.account_id}/watchlist?api_key=${API_KEY_3}&session_id=${this.props.session_id}`;\r\n            const body = {\r\n                media_type: 'movie',\r\n                media_id: media_id,\r\n                watchlist\r\n            }\r\n            this.props.addWatchlist(addFavoriteUrl, body);\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.getMovies(this.props.page, this.props.filters.primary_release_year, this.props.filters.with_genres);\r\n        }\r\n\r\n\r\n        componentDidUpdate(prevProps: Readonly<MoviesContainerType>, prevState: Readonly<{ movies: Array<MovieType> }>, snapshot?: any) {\r\n            if (prevProps.filters.sort_by !== this.props.filters.sort_by) {\r\n                this.getMovies(1, this.props.filters.primary_release_year, this.props.filters.with_genres);\r\n                this.props.onChangePage(1);\r\n            }\r\n            if (prevProps.page !== this.props.page) {\r\n                this.getMovies(this.props.page, this.props.filters.primary_release_year, this.props.filters.with_genres);\r\n            }\r\n            if (prevProps.filters.primary_release_year !== this.props.filters.primary_release_year) {\r\n                this.getMovies(this.props.page, this.props.filters.primary_release_year, this.props.filters.with_genres);\r\n                this.props.onChangePage(1);\r\n            }\r\n            if (prevProps.filters.with_genres !== this.props.filters.with_genres) {\r\n                this.getMovies(this.props.page, this.props.filters.primary_release_year, this.props.filters.with_genres);\r\n                this.props.onChangePage(1);\r\n            }\r\n        }\r\n\r\n        render() {\r\n            const {movies, account_id, session_id, isAuth, setRatingThunk} = this.props;\r\n\r\n            if (!movies.length) {\r\n                return <h1>Movies aren't found</h1>\r\n            }\r\n            // @ts-ignore\r\n            return <WrappedComponent movies={movies} changeFavorite={this.changeFavorite}\r\n                                     changeWatchlist={this.changeWatchlist}\r\n                                     account_id={account_id}\r\n                                     session_id={session_id}\r\n                                     isAuth={isAuth}\r\n                                     setRatingThunk={setRatingThunk}\r\n            />\r\n        }\r\n    }\r\n}\r\n\r\nexport default MoviesHOC;","import {AddFavoriteBodyType, AddWatchlistBodyType, API, GetMovieDetailsResp, GetMovies} from '../api/api';\r\nimport {ThunkDispatch} from 'redux-thunk';\r\nimport {AppRootStateType, TMDBActionType} from './store';\r\nimport {changeStatus, setError} from './appReducer';\r\n\r\nconst initialState = {\r\n    movieDetails: null as GetMovieDetailsResp | null,\r\n    favoriteMovies: null as GetMovies | null,\r\n    statusCode: null as number | null,\r\n    rating: null as null | number\r\n}\r\n\r\nexport type InitialMovieStateType = typeof initialState;\r\n\r\nexport const movieReducer = (state: InitialMovieStateType = initialState, action: MovieActionsType): InitialMovieStateType => {\r\n    switch (action.type) {\r\n        case 'MOVIE/SET-MOVIE':\r\n            return {\r\n                ...state,\r\n                movieDetails: {...action.payload}\r\n            }\r\n        case 'MOVIE/SET-FAVORITE-MOVIES':\r\n            return {\r\n                ...state,\r\n                favoriteMovies: action.payload\r\n            }\r\n        case 'MOVIE/SET-FAVORITE-STATUS-CODE':\r\n            return {\r\n                ...state,\r\n                statusCode: action.payload\r\n            }\r\n        case 'MOVIE/SET-RATING':\r\n            return {\r\n                ...state,\r\n                rating: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//actions\r\nexport const setMovie = (movie: GetMovieDetailsResp) => {\r\n    return {\r\n        type: 'MOVIE/SET-MOVIE',\r\n        payload: movie\r\n    } as const;\r\n}\r\nexport const setRating = (value: number) => {\r\n    return {\r\n        type: 'MOVIE/SET-RATING',\r\n        payload: value\r\n    } as const;\r\n}\r\nexport const setFavoriteMovies = (movies: GetMovies) => {\r\n    return {\r\n        type: 'MOVIE/SET-FAVORITE-MOVIES',\r\n        payload: movies\r\n    } as const;\r\n}\r\nexport const setFavoriteStatusCode = (statusCode: number) => {\r\n    return {\r\n        type: 'MOVIE/SET-FAVORITE-STATUS-CODE',\r\n        payload: statusCode\r\n    } as const;\r\n}\r\n\r\n//thunks\r\nexport const getMovieDetails = (link: string) => async (dispatch: ThunkDispatch<AppRootStateType, unknown, TMDBActionType>) => {\r\n    dispatch(changeStatus('loading'));\r\n    try {\r\n        let data = await API.getMovieDetails(link);\r\n        dispatch(changeStatus('succeeded'));\r\n        dispatch(setMovie(data));\r\n    } catch (e) {\r\n        dispatch(changeStatus('failed'));\r\n        console.log(e.message);\r\n    }\r\n}\r\nexport const getFavoriteList = (link: string) => async (dispatch: ThunkDispatch<AppRootStateType, unknown, TMDBActionType>) => {\r\n    dispatch(changeStatus('loading'));\r\n    try {\r\n        let data = await API.getFavoriteList(link);\r\n        dispatch(changeStatus('succeeded'));\r\n        dispatch(setFavoriteMovies(data));\r\n    } catch (e) {\r\n        dispatch(changeStatus('failed'));\r\n        console.log(e.message);\r\n    }\r\n}\r\n\r\n\r\nexport const addFavorite = (link: string, body: AddFavoriteBodyType) => async (dispatch: ThunkDispatch<AppRootStateType, unknown, TMDBActionType>) => {\r\n    dispatch(changeStatus('loading'));\r\n    try {\r\n        let data = await API.addFavorite(link, body);\r\n        dispatch(changeStatus('succeeded'));\r\n        dispatch(setFavoriteStatusCode(data.status_code));\r\n    } catch (e) {\r\n        dispatch(changeStatus('failed'));\r\n        dispatch(setError(e.response.data.status_message));\r\n\r\n        setTimeout(() => {\r\n            dispatch(setError(null));\r\n        }, 3000);\r\n    }\r\n}\r\nexport const addWatchlist = (link: string, body: AddWatchlistBodyType) => async (dispatch: ThunkDispatch<AppRootStateType, unknown, TMDBActionType>) => {\r\n    dispatch(changeStatus('loading'));\r\n    try {\r\n        await API.addWatchlist(link, body);\r\n        dispatch(changeStatus('succeeded'));\r\n    } catch (e) {\r\n        dispatch(changeStatus('failed'));\r\n        dispatch(setError(e.response.data.status_message));\r\n\r\n        setTimeout(() => {\r\n            dispatch(setError(null));\r\n        }, 3000);\r\n    }\r\n}\r\nexport const setRatingThunk = (link: string, body: { value: number }) => async (dispatch: ThunkDispatch<AppRootStateType, unknown, TMDBActionType>) => {\r\n    dispatch(changeStatus('loading'));\r\n    try {\r\n        await API.setRating(link, body);\r\n        dispatch(changeStatus('succeeded'));\r\n        dispatch(setRating(body.value));\r\n\r\n    } catch (e) {\r\n        dispatch(changeStatus('failed'));\r\n        dispatch(setError(e.response.data.status_message));\r\n\r\n        setTimeout(() => {\r\n            dispatch(setError(null));\r\n        }, 3000);\r\n    }\r\n}\r\n\r\n\r\n//types\r\ntype SetMovieAC = ReturnType<typeof setMovie>;\r\ntype SetFavoriteMoviesAC = ReturnType<typeof setFavoriteMovies>;\r\ntype SetFavoriteStatusCodeAC = ReturnType<typeof setFavoriteStatusCode>;\r\ntype SetRatingAC = ReturnType<typeof setRating>;\r\n\r\n\r\nexport type MovieActionsType =\r\n    SetMovieAC\r\n    | SetFavoriteMoviesAC\r\n    | SetFavoriteStatusCodeAC\r\n    | SetRatingAC;\r\n","import React from 'react';\r\nimport MovieItem from './MovieItem';\r\nimport {AddFavoriteBodyType, AddWatchlistBodyType, MovieType} from '../../api/api';\r\nimport MoviesHOC from './MoviesHOC';\r\nimport {AppRootStateType} from '../../Store/store';\r\nimport {connect} from 'react-redux';\r\nimport {addFavorite, addWatchlist,setRatingThunk} from '../../Store/movieReducer';\r\n\r\ntype MoviesListPropsType = {\r\n    movies: Array<MovieType>\r\n    changeFavorite: (media_type: string, favorite: boolean, media_id: number) => void\r\n    changeWatchlist: (media_type: string, watchlist: boolean, media_id: number) => void\r\n    account_id: number | null\r\n    session_id: null | string\r\n    isAuth: boolean\r\n    setRatingThunk: (link: string, body: { value: number }) => void\r\n}\r\n\r\nconst MoviesList: React.FC<MoviesListPropsType> = ({movies, changeFavorite, setRatingThunk, changeWatchlist, account_id, isAuth, session_id}) => {\r\n\r\n    return <div className=\"row\">\r\n        {movies.map(movie => {\r\n            return (\r\n                <div key={movie.id} className=\"col-sm-6 col-lg-4 mb-4\">\r\n                    <MovieItem item={movie}\r\n                               changeFavorite={changeFavorite}\r\n                               changeWatchlist={changeWatchlist}\r\n                               account_id={account_id}\r\n                               session_id={session_id}\r\n                               isAuth={isAuth}\r\n                               setRatingThunk={setRatingThunk}\r\n                    />\r\n                </div>\r\n            );\r\n        })}\r\n    </div>\r\n}\r\n\r\ntype MapStateToProps = {\r\n    account_id: number | null,\r\n    isAuth: boolean\r\n}\r\nconst mapStateToProps = (state: AppRootStateType): MapStateToProps => {\r\n    return {\r\n        account_id: state.app.user && state.app.user.id,\r\n        isAuth: state.app.isAuth\r\n    }\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    addFavorite: (link: string, body: AddFavoriteBodyType) => void\r\n    addWatchlist: (link: string, body: AddWatchlistBodyType) => void\r\n    setRatingThunk: (link: string, body: { value: number }) => void\r\n}\r\n\r\nexport default connect<MapStateToProps, MapDispatchToProps, {}, AppRootStateType>(mapStateToProps, {\r\n    addFavorite,\r\n    addWatchlist,\r\n    setRatingThunk\r\n})(MoviesHOC(MoviesList));","import React from 'react';\r\nimport Filters from './../../Filters/Filters';\r\nimport {AppRootStateType} from '../../../Store/store';\r\nimport {\r\n    changeFilters,\r\n    changePage,\r\n    genresChange,\r\n    genresReset,\r\n    getMovies,\r\n    InitialMoviesStateType,\r\n    resetAllFilters\r\n} from '../../../Store/moviesReducer';\r\nimport {connect} from 'react-redux';\r\nimport {genresResetChecked} from '../../../Store/genresFilterReducer';\r\nimport MoviesList from './../../Movies/MoviesList';\r\n\r\nclass MoviesPage extends React.Component<MapStateToProps & MapDispatchToProps> {\r\n\r\n    //Change Filter Type\r\n    changeFilters = (value: string, name: string) => {\r\n        this.props.changeFilters(value, name);\r\n    }\r\n\r\n    //Change pageNumber\r\n    onChangePage = (page: number) => {\r\n        this.props.changePage(page);\r\n    }\r\n    //Reset All Filters\r\n    resetAllFilters = () => {\r\n        this.props.resetAllFilters();\r\n        this.props.genresResetChecked();\r\n    }\r\n    //Change GenresFilter\r\n    onGenresChange = (genreId: string) => {\r\n        this.props.genresChange(genreId);\r\n    }\r\n    //reset GenresFilter\r\n    onGenresReset = () => {\r\n        this.props.genresReset();\r\n\r\n    }\r\n\r\n    render() {\r\n        const {filters, page, total_pages, movies} = this.props.moviesReducer;\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-4\">\r\n                        <div className=\" col-sm-4\">\r\n                            <div className=\"card\" style={{width: '100%'}}>\r\n                                <div className=\"card-body\">\r\n                                    <h3>Фильтры:</h3>\r\n                                    <Filters filters={filters} changeFilters={this.changeFilters} page={page}\r\n                                             onChangePage={this.onChangePage}\r\n                                             totalPages={total_pages}\r\n                                             resetAllFilters={this.resetAllFilters}\r\n                                             onGenresChange={this.onGenresChange}\r\n                                             onGenresReset={this.onGenresReset}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"container col-sm-8\">\r\n                            <MoviesList filters={filters} page={page}\r\n                                        session_id={this.props.session_id}\r\n                                        onChangePage={this.onChangePage}\r\n                                        movies={movies}\r\n                                        getMovies={this.props.getMovies}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\ntype MapStateToProps = {\r\n    moviesReducer: InitialMoviesStateType\r\n    session_id: string | null\r\n}\r\nconst mapStateToProps = (state: AppRootStateType): MapStateToProps => {\r\n    return {\r\n        moviesReducer: state.movies,\r\n        session_id: state.app.session_id\r\n    }\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    changeFilters: (value: string, name: string) => void\r\n    changePage: (page: number) => void\r\n    resetAllFilters: () => void\r\n    genresReset: () => void\r\n    genresChange: (genreId: string) => void\r\n    genresResetChecked: () => void\r\n    getMovies: (link: string) => void\r\n}\r\nexport default connect<MapStateToProps, MapDispatchToProps, {}, AppRootStateType>(mapStateToProps, {\r\n    changeFilters,\r\n    changePage,\r\n    resetAllFilters,\r\n    genresReset,\r\n    genresChange,\r\n    genresResetChecked,\r\n    getMovies,\r\n})(MoviesPage);","import React, {PureComponent} from 'react';\r\nimport {GetMovieDetailsResp} from '../../../../api/api';\r\nimport {Modal, ModalBody} from 'reactstrap';\r\nimport LoginForm from '../../../Header/Login/LoginForm/LoginForm';\r\n\r\n\r\ntype PosterPropsType = {\r\n    movieDetails: null | GetMovieDetailsResp\r\n    isAuth: boolean\r\n    changeFavorite: (media_type: string, favorite: boolean, media_id: number) => void\r\n    changeWatchlist: (media_type: string, watchlist: boolean, media_id: number) => void\r\n}\r\n\r\nclass Poster extends PureComponent<PosterPropsType, { favorite: boolean, bookmark: boolean, showModal: boolean }> {\r\n    state = {\r\n        favorite: false,\r\n        bookmark: false,\r\n        showModal: false\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState(prevState => ({\r\n            showModal: !prevState.showModal\r\n        }))\r\n    }\r\n\r\n    changeFavoriteHandler = () => {\r\n        if (!this.props.isAuth) {\r\n            this.toggleModal();\r\n        } else {\r\n            this.setState(prevState => ({\r\n                favorite: !prevState.favorite\r\n            }), () => {\r\n                // @ts-ignore\r\n                this.props.changeFavorite('movie', this.state.favorite, this.props.movieDetails.id);\r\n            })\r\n        }\r\n    }\r\n    changeBookmarkHandler = () => {\r\n        if (!this.props.isAuth) {\r\n            this.toggleModal();\r\n        } else {\r\n            this.setState(prevState => ({\r\n                bookmark: !prevState.bookmark\r\n            }), () => {\r\n                // @ts-ignore\r\n                this.props.changeWatchlist('movie', this.state.bookmark, this.props.movieDetails.id);\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {movieDetails} = this.props;\r\n        const backdrop_url = `https://image.tmdb.org/t/p/w500/${movieDetails && movieDetails.backdrop_path}`;\r\n        return <>\r\n            {\r\n                this.state.showModal && !this.props.isAuth\r\n                    ? <Modal isOpen={this.state.showModal} toggle={this.toggleModal}>\r\n                        <ModalBody>\r\n                            <LoginForm/>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                    : ''\r\n            }\r\n            <div className=\"moviePage\"\r\n                 style={{backgroundImage: `url(${backdrop_url})`}}>\r\n                <div className={'pt-3 pb-3 pl-4 pr-4 moviePage__container'}>\r\n                    <section className={'moviePage__section '}>\r\n                        <div className=\"row mt-4\">\r\n                            <div className=\"col-3 moviePage__poster-block\">\r\n                                <div className=\"moviePage__poster-block-img\">\r\n                                    <img\r\n                                        src={`https://image.tmdb.org/t/p/w500/${movieDetails && movieDetails.poster_path}`}\r\n                                        alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md \">\r\n                                <section className=\"moviePage__section-info\">\r\n                                    <div className=\"moviePage__title\">\r\n                                        <h2>{movieDetails && movieDetails.title}</h2>\r\n                                        <div className=\"moviePage__facts\">\r\n                                        <span\r\n                                            className=\"moviePage__release\">{movieDetails && movieDetails.release_date.replaceAll('-', '/')}</span>\r\n                                            <span\r\n                                                className=\"moviePage__genres\">{movieDetails && movieDetails.genres.map(g =>\r\n                                                <b key={g.id}>{g.name} </b>)}</span>\r\n                                            <span\r\n                                                className=\"moviePage__runtime\">{movieDetails && movieDetails.runtime} m</span>\r\n                                        </div>\r\n                                        <div className=\"favorite\"><b>Favorite </b>\r\n                                            {this.state.favorite\r\n                                                ? <svg onClick={this.changeFavoriteHandler}\r\n                                                       style={{cursor: 'pointer'}}\r\n                                                       xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"\r\n                                                       fill=\"currentColor\"\r\n                                                       className=\"bi bi-star-fill\" viewBox=\"0 0 16 16\">\r\n                                                    <path\r\n                                                        d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/>\r\n                                                </svg>\r\n                                                : <svg onClick={this.changeFavoriteHandler}\r\n                                                       style={{cursor: 'pointer'}}\r\n                                                       xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"\r\n                                                       fill=\"currentColor\"\r\n                                                       className=\"bi bi-star\" viewBox=\"0 0 16 16\">\r\n                                                    <path\r\n                                                        d=\"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z\"/>\r\n                                                </svg>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"watchlist\"><b>Watchlist </b>\r\n                                            {this.state.bookmark\r\n                                                ? <svg onClick={this.changeBookmarkHandler}\r\n                                                       style={{cursor: 'pointer'}}\r\n                                                       xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"\r\n                                                       fill=\"currentColor\"\r\n                                                       className=\"bi bi-bookmark-fill\" viewBox=\"0 0 16 16\">\r\n                                                    <path\r\n                                                        d=\"M2 2v13.5a.5.5 0 0 0 .74.439L8 13.069l5.26 2.87A.5.5 0 0 0 14 15.5V2a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2z\"/>\r\n                                                </svg>\r\n                                                : <svg onClick={this.changeBookmarkHandler}\r\n                                                       style={{cursor: 'pointer'}}\r\n                                                       xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"\r\n                                                       fill=\"currentColor\"\r\n                                                       className=\"bi bi-bookmark\" viewBox=\"0 0 16 16\">\r\n                                                    <path\r\n                                                        d=\"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z\"/>\r\n                                                </svg>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"moviePage__info\">\r\n                                            <h3 className={'moviePage__tagline'}>{movieDetails && movieDetails.tagline}</h3>\r\n                                            <h3 className={'moviePage__review'}>Обзор</h3>\r\n                                            <div className=\"moviePage__overview\">\r\n                                                <p>{movieDetails && movieDetails.overview}</p>\r\n                                            </div>\r\n                                            <div className={'moviePage__vote'}>\r\n                                                Рейтинг пользователей: {movieDetails && movieDetails.vote_average}\r\n                                            </div>\r\n                                            <div className={'moviePage__vote'}>\r\n                                                {/*<div className=\"card-text\"><b>Оценить фильм</b>*/}\r\n                                                {/*    <button onClick={this.rating}>оценка</button>*/}\r\n                                                {/*</div>*/}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </section>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default Poster;","import React, {PureComponent} from 'react';\r\nimport {ActingRespType, API_KEY_3, API_URL} from '../../../../../api/api';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype ActingPagePropsType = {\r\n    movie_id: string\r\n    actorsDetails: ActingRespType | null\r\n    getActorsDetails: (link: string) => void\r\n}\r\n\r\nclass ActingPage extends PureComponent<ActingPagePropsType, { acting: null | ActingRespType }> {\r\n    componentDidMount() {\r\n        const actingUrl = `${API_URL}/movie/${this.props.movie_id}/credits?api_key=${API_KEY_3}&language=ru-RU`;\r\n        this.props.getActorsDetails(actingUrl);\r\n    }\r\n\r\n    render() {\r\n        const {actorsDetails} = this.props;\r\n        return (\r\n            <div className={'mt-3 actingPage container'}>\r\n                <h3>В главных ролях</h3>\r\n                <div className=\"row\">\r\n                    {actorsDetails && actorsDetails.cast.map(p => <div key={p.cast_id} className=\"col\">\r\n                        <div className={'actingPage__card'}>\r\n                            <div className={'actingPage__img'}>\r\n                                <NavLink to={`/person/${p.id}`}>\r\n                                    <img\r\n                                        src={p.profile_path ? `https://image.tmdb.org/t/p/w500/${p.profile_path}` : 'https://static.wikia.nocookie.net/nopixel/images/b/b4/Not-found-image-15383864787lu.jpg/revision/latest?cb=20200910062142'}\r\n                                        alt={`${p.name}`} title={`${p.name}`}/>\r\n                                </NavLink>\r\n\r\n                            </div>\r\n                            <p>{p.name}</p>\r\n                            <p>{p.character}</p>\r\n                        </div>\r\n                    </div>)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActingPage;","import React, {Component} from 'react';\r\nimport {MovieType} from '../../../../../../api/api';\r\nimport MovieItem from '../../../../../Movies/MovieItem';\r\n\r\ntype SimilarMoviesListPropsType = {\r\n    page:number\r\n    movies:Array<MovieType>\r\n    session_id:string | null\r\n    changeFavorite: (media_type: string, favorite: boolean, media_id: number) => void\r\n    changeWatchlist: (media_type: string, watchlist: boolean, media_id: number) => void\r\n    account_id:number | null\r\n    isAuth:boolean\r\n    setRatingThunk: (link: string, body: { value: number }) => void\r\n}\r\nclass SimilarMoviesList extends Component<SimilarMoviesListPropsType> {\r\n\r\n    render() {\r\n        const {movies =[],changeWatchlist,changeFavorite,session_id,account_id,isAuth,setRatingThunk} = this.props;\r\n        return (\r\n            <div className=\"row mt-3\">\r\n                {movies.map(movie => {\r\n                    return (\r\n                        <div key={movie.id} className=\"col-6 col-md-4 col-lg-3 mb-4\">\r\n                            <MovieItem item={movie}\r\n                                       changeFavorite={changeFavorite}\r\n                                       changeWatchlist={changeWatchlist}\r\n                                       account_id={account_id}\r\n                                       session_id={session_id}\r\n                                       isAuth={isAuth}\r\n                                       setRatingThunk={setRatingThunk}\r\n                            />\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SimilarMoviesList;","import React, {PureComponent} from 'react';\r\nimport {API_KEY_3, API_URL, GetMovies} from '../../../../../api/api';\r\nimport FilterPagination from '../../../../Filters/FilterPagination/FilterPagination';\r\nimport SimilarMoviesList from './SimilarMoviesList/SimilarMoviesList';\r\n\r\ntype SimilarMoviePagePropsType = {\r\n    movie_id: string\r\n    similarMovies: GetMovies\r\n    getSimilarMovies: (link: string) => void\r\n    changeSimilarMoviePage: (page: number) => void\r\n    session_id: string | null\r\n    changeFavorite: (media_type: string, favorite: boolean, media_id: number) => void\r\n    changeWatchlist: (media_type: string, watchlist: boolean, media_id: number) => void\r\n    account_id: number | null\r\n    isAuth: boolean\r\n    setRatingThunk: (link: string, body: { value: number }) => void\r\n}\r\n\r\nclass SimilarMoviePage extends PureComponent<SimilarMoviePagePropsType> {\r\n    componentDidMount() {\r\n        const actingUrl = `${API_URL}/movie/${this.props.movie_id}/similar?api_key=${API_KEY_3}&language=ru-RU&page=1`;\r\n        this.props.getSimilarMovies(actingUrl);\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<SimilarMoviePagePropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if (prevProps.similarMovies.page !== this.props.similarMovies.page) {\r\n            const actingUrl = `${API_URL}/movie/${this.props.movie_id}/similar?api_key=${API_KEY_3}&language=ru-RU&page=${this.props.similarMovies.page}`;\r\n            this.props.getSimilarMovies(actingUrl);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {similarMovies, changeSimilarMoviePage, session_id, changeFavorite, changeWatchlist, account_id, isAuth, setRatingThunk} = this.props;\r\n\r\n        return (\r\n            <div className={'mt-3  container'}>\r\n                <FilterPagination page={similarMovies.page} onChangePage={changeSimilarMoviePage}\r\n                                  totalPages={similarMovies && similarMovies.total_pages}/>\r\n                <SimilarMoviesList\r\n                    page={similarMovies.page}\r\n                    movies={similarMovies.results}\r\n                    session_id={session_id}\r\n                    changeFavorite={changeFavorite}\r\n                    changeWatchlist={changeWatchlist}\r\n                    account_id={account_id}\r\n                    isAuth={isAuth}\r\n                    setRatingThunk={setRatingThunk}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SimilarMoviePage;","import {ActingRespType, API, GetMovies} from '../api/api';\r\nimport {ThunkDispatch} from 'redux-thunk';\r\nimport {AppRootStateType, TMDBActionType} from './store';\r\nimport {changeStatus} from './appReducer';\r\n\r\nconst initialState = {\r\n    actorsDetails: null as ActingRespType | null,\r\n    // similarMovies: null as GetMovies | null\r\n    similarMovies: {} as GetMovies\r\n}\r\n\r\nexport type InitialTabMovieReducerType = typeof initialState;\r\n\r\nexport const tabMovieReducer = (state: InitialTabMovieReducerType = initialState, action: TabMovieActionsType): InitialTabMovieReducerType => {\r\n    switch (action.type) {\r\n        case 'TAB-MOVIE/SET-ACTORS-DETAILS':\r\n            return {\r\n                ...state, actorsDetails: action.payload\r\n            }\r\n        case 'TAB-MOVIE/SET-SIMILAR-MOVIES':\r\n            return {\r\n                ...state,\r\n                similarMovies: action.payload\r\n            }\r\n        case 'TAB-MOVIE/CHANGE-SIMILAR-PAGE':\r\n            return {\r\n                ...state,\r\n                similarMovies: {\r\n                    ...state.similarMovies,\r\n                    page: action.payload\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n//actions\r\n\r\n\r\nexport const setActorsDetails = (actorsDetails: ActingRespType) => {\r\n    return {\r\n        type: 'TAB-MOVIE/SET-ACTORS-DETAILS',\r\n        payload: actorsDetails\r\n    } as const;\r\n}\r\nexport const setSimilarMovies = (similarMovies: GetMovies) => {\r\n    return {\r\n        type: 'TAB-MOVIE/SET-SIMILAR-MOVIES',\r\n        payload: similarMovies\r\n    } as const;\r\n}\r\nexport const changeSimilarMoviePage = (page: number) => {\r\n    return {\r\n        type: 'TAB-MOVIE/CHANGE-SIMILAR-PAGE',\r\n        payload: page\r\n    } as const\r\n}\r\n\r\n//thunks\r\nexport const getActorsDetails = (link: string) => async (dispatch: ThunkDispatch<AppRootStateType, unknown, TMDBActionType>) => {\r\n    dispatch(changeStatus('loading'));\r\n    try {\r\n        let data = await API.getActing(link);\r\n        dispatch(changeStatus('succeeded'));\r\n        dispatch(setActorsDetails(data))\r\n    } catch (e) {\r\n        dispatch(changeStatus('failed'));\r\n        console.log(e.message);\r\n    }\r\n}\r\nexport const getSimilarMovies = (link: string) => async (dispatch: ThunkDispatch<AppRootStateType, unknown, TMDBActionType>) => {\r\n    dispatch(changeStatus('loading'));\r\n    try {\r\n        let data = await API.getSimilarMovie(link);\r\n        dispatch(changeStatus('succeeded'));\r\n        dispatch(setSimilarMovies(data))\r\n    } catch (e) {\r\n        dispatch(changeStatus('failed'));\r\n        console.log(e.message);\r\n    }\r\n}\r\n\r\n//types\r\ntype SetActorsDetailsAC = ReturnType<typeof setActorsDetails>\r\ntype SetSimilarMoviesAC = ReturnType<typeof setSimilarMovies>\r\ntype ChangeSimilarMoviePageAC = ReturnType<typeof changeSimilarMoviePage>\r\n\r\n\r\nexport type TabMovieActionsType =\r\n    SetActorsDetailsAC\r\n    | SetSimilarMoviesAC\r\n    | ChangeSimilarMoviePageAC;\r\n","import React, {Component} from 'react';\r\nimport {Table} from 'reactstrap';\r\nimport {GetMovieDetailsResp} from '../../../../../api/api';\r\n\r\ntype MoviePageInfoPropsType = {\r\n    movieDetails: null | GetMovieDetailsResp\r\n}\r\n\r\nclass MoviePageInfo extends Component<MoviePageInfoPropsType> {\r\n    render() {\r\n        const {movieDetails} = this.props;\r\n        return (\r\n            <div className={'mt-3'}>\r\n                <Table>\r\n                    <thead>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        <th scope=\"row\">Статус</th>\r\n                        <td>{movieDetails && movieDetails.status}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">Дата выхода</th>\r\n                        <td>{movieDetails && movieDetails.release_date}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">Продолжительность</th>\r\n                        <td>{movieDetails && movieDetails.runtime}m</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">Язык оригинала</th>\r\n                        <td>{movieDetails && movieDetails.original_language}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">Страна</th>\r\n                        <td>{movieDetails && movieDetails.production_countries.map(c => <span\r\n                            key={c.name}>{c.name} </span>)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">Бюджет</th>\r\n                        <td>{movieDetails && movieDetails.budget} $</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">Сборы</th>\r\n                        <td>{movieDetails && movieDetails.revenue} $</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">Компания</th>\r\n                        <td>{movieDetails && movieDetails.production_companies.map(c => <div key={c.id}>\r\n                            <span className={'companyInfo'}>{c.name}</span>\r\n                        </div>)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">Жанры</th>\r\n                        <td>{movieDetails && movieDetails.genres.map(g => <div key={g.id}>\r\n                            <span className={'companyInfo'}>{g.name}</span>\r\n                        </div>)}</td>\r\n                    </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MoviePageInfo;","import React, {Component} from 'react';\r\nimport {Col, Nav, NavItem, NavLink, Row, TabContent, TabPane} from 'reactstrap';\r\nimport {Link} from 'react-router-dom'\r\nimport ActingPage from './ActingPage/ActingPage';\r\nimport SimilarMoviePage from './SimilarMoviePage/SimilarMoviePage';\r\nimport {AppRootStateType} from '../../../../Store/store';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    changeSimilarMoviePage,\r\n    getActorsDetails,\r\n    getSimilarMovies,\r\n    InitialTabMovieReducerType\r\n} from '../../../../Store/tabMovieReducer';\r\nimport {AddFavoriteBodyType, AddWatchlistBodyType, API_KEY_3, API_URL, GetMovieDetailsResp} from '../../../../api/api';\r\nimport {addFavorite, addWatchlist,setRatingThunk} from '../../../../Store/movieReducer';\r\nimport MoviePageInfo from './MoviePageInfo/MoviePageInfo';\r\n\r\ntype TabMoviePagePropsType = {\r\n    movie_id: string\r\n    movieType: string\r\n} & MapStateToProps & MapDispatchToProps;\r\n\r\nclass TabMoviePage extends Component<TabMoviePagePropsType, { activeTab: string }> {\r\n    // for tabs\r\n    state = {\r\n        activeTab: this.props.movieType\r\n    }\r\n\r\n    toggle = (tab: string) => {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            })\r\n        }\r\n    }\r\n    //for SimilarMoviePage\r\n    changeFavorite = (media_type: string, favorite: boolean, media_id: number) => {\r\n        const addFavoriteUrl = `${API_URL}/account/${this.props.account_id}/favorite?api_key=${API_KEY_3}&session_id=${this.props.session_id}`;\r\n        const body = {\r\n            media_type: 'movie',\r\n            media_id: media_id,\r\n            favorite\r\n        }\r\n        this.props.addFavorite(addFavoriteUrl, body);\r\n    }\r\n    changeWatchlist = (media_type: string, watchlist: boolean, media_id: number) => {\r\n        const addFavoriteUrl = `${API_URL}/account/${this.props.account_id}/watchlist?api_key=${API_KEY_3}&session_id=${this.props.session_id}`;\r\n        const body = {\r\n            media_type: 'movie',\r\n            media_id: media_id,\r\n            watchlist\r\n        }\r\n        this.props.addWatchlist(addFavoriteUrl, body);\r\n    }\r\n\r\n    render() {\r\n        const {tabMoviePage: {actorsDetails, similarMovies}, getActorsDetails, setRatingThunk, getSimilarMovies, changeSimilarMoviePage, session_id, account_id, isAuth} = this.props;\r\n        return <div>\r\n            <Nav tabs>\r\n                <NavItem>\r\n                    <NavLink\r\n                        to={`/movie/${this.props.movie_id}/detail`}\r\n                        tag={Link}\r\n                        className={this.state.activeTab === '1' ? 'active' : ''}\r\n                        onClick={() => {\r\n                            this.toggle('1');\r\n                        }}>Детали</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink\r\n                        to={`/movie/${this.props.movie_id}/videos`}\r\n                        tag={Link}\r\n                        className={this.state.activeTab === '2' ? 'active' : ''}\r\n                        onClick={() => {\r\n                            this.toggle('2');\r\n                        }}>Похожие фильмы</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink\r\n                        to={`/movie/${this.props.movie_id}/credits`}\r\n                        tag={Link}\r\n                        className={this.state.activeTab === '3' ? 'active' : ''}\r\n                        onClick={() => {\r\n                            this.toggle('3');\r\n                        }}>Актеры </NavLink>\r\n                </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n                {this.state.activeTab === '1' && <TabPane tabId=\"1\">\r\n                    <Row>\r\n                        <Col sm=\"12\">\r\n                            <MoviePageInfo movieDetails={this.props.movieDetails}/>\r\n                        </Col>\r\n                    </Row>\r\n                </TabPane>}\r\n                {this.state.activeTab === '2' && <TabPane tabId=\"2\">\r\n                    <Row>\r\n                        <Col sm=\"12\">\r\n                            <SimilarMoviePage movie_id={this.props.movie_id} similarMovies={similarMovies}\r\n                                              getSimilarMovies={getSimilarMovies}\r\n                                              changeSimilarMoviePage={changeSimilarMoviePage}\r\n                                              session_id={session_id}\r\n                                              changeWatchlist={this.changeWatchlist}\r\n                                              changeFavorite={this.changeFavorite}\r\n                                              account_id={account_id}\r\n                                              isAuth={isAuth}\r\n                                              setRatingThunk={setRatingThunk}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </TabPane>}\r\n                {this.state.activeTab === '3' && <TabPane tabId=\"3\">\r\n                    <Row>\r\n                        <Col sm=\"12\">\r\n                            <ActingPage movie_id={this.props.movie_id} actorsDetails={actorsDetails}\r\n                                        getActorsDetails={getActorsDetails}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </TabPane>}\r\n            </TabContent>\r\n        </div>\r\n    }\r\n}\r\n\r\ntype MapStateToProps = {\r\n    tabMoviePage: InitialTabMovieReducerType\r\n    session_id: string | null\r\n    account_id: number | null\r\n    movieDetails: null | GetMovieDetailsResp,\r\n    isAuth: boolean\r\n}\r\nconst mapStateToProps = (state: AppRootStateType): MapStateToProps => {\r\n    return {\r\n        tabMoviePage: state.tabMoviePage,\r\n        session_id: state.app.session_id,\r\n        account_id: state.app.user && state.app.user.id,\r\n        movieDetails: state.moviePage.movieDetails,\r\n        isAuth: state.app.isAuth\r\n    }\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    getActorsDetails: (link: string) => void\r\n    getSimilarMovies: (link: string) => void\r\n    changeSimilarMoviePage: (page: number) => void\r\n    addFavorite: (link: string, body: AddFavoriteBodyType) => void\r\n    addWatchlist: (link: string, body: AddWatchlistBodyType) => void\r\n    setRatingThunk: (link: string, body: { value: number }) => void\r\n}\r\n\r\nexport default connect<MapStateToProps, MapDispatchToProps, {}, AppRootStateType>(mapStateToProps, {\r\n    getActorsDetails,\r\n    getSimilarMovies,\r\n    changeSimilarMoviePage,\r\n    addWatchlist,\r\n    addFavorite,\r\n    setRatingThunk\r\n})(TabMoviePage);\r\n","import React, {PureComponent} from 'react';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {AddFavoriteBodyType, AddWatchlistBodyType, API_KEY_3, API_URL, GetMovieDetailsResp} from '../../../api/api';\r\nimport {AppRootStateType} from '../../../Store/store';\r\nimport {connect} from 'react-redux';\r\nimport {addFavorite, addWatchlist, getMovieDetails,} from '../../../Store/movieReducer';\r\nimport Poster from './Poster/Poster';\r\nimport TabMoviePage from './TabMoviePage/TabMoviePage';\r\n\r\ntype PathParamsType = {\r\n    id: string\r\n    movietype: string\r\n}\r\ntype MoviePagePropsType = RouteComponentProps<PathParamsType> & MapStateToProps & MapDispatchToProps ;\r\n\r\nclass MoviePage extends PureComponent<MoviePagePropsType, { movie_id: string }> {\r\n    state = {\r\n        movie_id: this.props.match.params.id\r\n    }\r\n\r\n    componentDidMount() {\r\n        const movie_id = this.props.match.params.id;\r\n        const getMovieDetailsUrl = `${API_URL}/movie/${movie_id}?api_key=${API_KEY_3}&language=ru-RU`;\r\n        this.props.getMovieDetails(getMovieDetailsUrl);\r\n    }\r\n\r\n    changeFavorite = (media_type: string, favorite: boolean, media_id: number) => {\r\n        const addFavoriteUrl = `${API_URL}/account/${this.props.account_id}/favorite?api_key=${API_KEY_3}&session_id=${this.props.session_id}`;\r\n        const body = {\r\n            media_type: 'movie',\r\n            media_id: media_id,\r\n            favorite\r\n        }\r\n        this.props.addFavorite(addFavoriteUrl, body);\r\n    }\r\n    changeWatchlist = (media_type: string, watchlist: boolean, media_id: number) => {\r\n        console.log(media_type, watchlist, media_id)\r\n        const addFavoriteUrl = `${API_URL}/account/${this.props.account_id}/watchlist?api_key=${API_KEY_3}&session_id=${this.props.session_id}`;\r\n        const body = {\r\n            media_type: 'movie',\r\n            media_id: media_id,\r\n            watchlist\r\n        }\r\n        this.props.addWatchlist(addFavoriteUrl, body);\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<MoviePagePropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        const movie_id = this.props.match.params.id;\r\n        if (movie_id !== this.state.movie_id) {\r\n            const getMovieDetailsUrl = `${API_URL}/movie/${movie_id}?api_key=${API_KEY_3}&language=ru-RU`;\r\n            this.props.getMovieDetails(getMovieDetailsUrl);\r\n            this.setState({\r\n                movie_id: this.props.match.params.id\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {movieDetails, isAuth,} = this.props;\r\n        const movie_id = this.props.match.params.id;\r\n\r\n        let movietype = this.props.match.params.movietype;\r\n\r\n        if (movietype === undefined) {\r\n            movietype = '1';\r\n        } else if (movietype === 'detail') {\r\n            movietype = '1';\r\n        } else if (movietype === 'videos') {\r\n            movietype = '2';\r\n        } else if (movietype === 'credits') {\r\n            movietype = '3';\r\n        }\r\n\r\n        return (\r\n            <div className={'container'}>\r\n                <Poster movieDetails={movieDetails} isAuth={isAuth} changeFavorite={this.changeFavorite}\r\n                        changeWatchlist={this.changeWatchlist}/>\r\n                <TabMoviePage movie_id={movie_id} movieType={movietype}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\ntype MapStateToProps = {\r\n    movieDetails: null | GetMovieDetailsResp\r\n    isAuth: boolean\r\n    account_id: number | null\r\n    session_id: string | null\r\n\r\n}\r\nconst mapStateToProps = (state: AppRootStateType): MapStateToProps => {\r\n    return {\r\n        movieDetails: state.moviePage.movieDetails,\r\n        isAuth: state.app.isAuth,\r\n        account_id: state.app.user && state.app.user.id,\r\n        session_id: state.app.session_id,\r\n\r\n    }\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    getMovieDetails: (link: string) => void;\r\n    addFavorite: (link: string, body: AddFavoriteBodyType) => void\r\n    addWatchlist: (link: string, body: AddWatchlistBodyType) => void\r\n}\r\n\r\n\r\nexport default connect<MapStateToProps, MapDispatchToProps, {}, AppRootStateType>(mapStateToProps, {\r\n    getMovieDetails,\r\n    addFavorite,\r\n    addWatchlist\r\n})(withRouter(MoviePage));","import React, {Component} from 'react';\r\n\r\nclass PageNotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h2 className={'text-center mt-5'}> 404 - Page not found</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport {Spinner} from 'reactstrap';\r\n\r\nexport const Loader = () => {\r\n    return  <div\r\n        // className={'mt-3 loading'}\r\n        className={'mt-3 d-flex justify-content-center align-items-center'}\r\n    >\r\n        <Spinner type=\"grow\" color=\"primary\" />\r\n        <Spinner type=\"grow\" color=\"secondary\" />\r\n        <Spinner type=\"grow\" color=\"success\" />\r\n        <Spinner type=\"grow\" color=\"danger\" />\r\n        <Spinner type=\"grow\" color=\"warning\" />\r\n        <Spinner type=\"grow\" color=\"info\" />\r\n        <Spinner type=\"grow\" color=\"dark\" />\r\n    </div>\r\n}","import React, {PureComponent} from 'react';\r\nimport {AddFavoriteBodyType, AddWatchlistBodyType, API_KEY_3, API_URL, GetMovies} from '../../../api/api';\r\nimport Cookies from 'universal-cookie';\r\nimport MovieItem from '../../Movies/MovieItem';\r\n\r\nconst cookies = new Cookies();\r\n\r\ntype FavoritePropsType = {\r\n    account_id: number | null\r\n    session_id: string | null\r\n    isAuth: boolean\r\n    getFavoriteList: (link: string) => void\r\n    favoriteMovies: GetMovies | null\r\n    addFavorite: (link: string, body: AddFavoriteBodyType) => void\r\n    addWatchlist: (link: string, body: AddWatchlistBodyType) => void\r\n    statusCode: number | null\r\n    setRatingThunk: (link: string, body: { value: number }) => void\r\n}\r\n\r\n\r\nclass Favorite extends PureComponent<FavoritePropsType> {\r\n    componentDidMount() {\r\n        const session_id = cookies.get('session_id');\r\n        if (session_id) {\r\n            const favUrl = `${API_URL}/account/${this.props.account_id}/favorite/movies?api_key=${API_KEY_3}&session_id=${session_id}&language=ru-RU`;\r\n            this.props.getFavoriteList(favUrl);\r\n        }\r\n    }\r\n\r\n    changeFavorite = (media_type: string, favorite: boolean, media_id: number) => {\r\n        const addFavoriteUrl = `${API_URL}/account/${this.props.account_id}/favorite?api_key=${API_KEY_3}&session_id=${this.props.session_id}`;\r\n        const body = {\r\n            media_type: 'movie',\r\n            media_id: media_id,\r\n            favorite\r\n        }\r\n        this.props.addFavorite(addFavoriteUrl, body);\r\n    }\r\n    changeWatchlist = (media_type: string, watchlist: boolean, media_id: number) => {\r\n        console.log(media_type, watchlist, media_id)\r\n        const addFavoriteUrl = `${API_URL}/account/${this.props.account_id}/watchlist?api_key=${API_KEY_3}&session_id=${this.props.session_id}`;\r\n        const body = {\r\n            media_type: 'movie',\r\n            media_id: media_id,\r\n            watchlist\r\n        }\r\n        this.props.addWatchlist(addFavoriteUrl, body);\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<FavoritePropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if (this.props.statusCode === 13 && this.props.statusCode !== prevProps.statusCode) {\r\n            const session_id = cookies.get('session_id');\r\n            if (session_id) {\r\n                const favUrl = `${API_URL}/account/${this.props.account_id}/favorite/movies?api_key=${API_KEY_3}&session_id=${session_id}&language=ru-RU`;\r\n                this.props.getFavoriteList(favUrl);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {favoriteMovies, isAuth, session_id, account_id,setRatingThunk} = this.props;\r\n        if (!isAuth) {\r\n            return (\r\n                <div className={'container mt-3'}>\r\n                    <h1>You are not authorisation, please logIn</h1>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className={'container'}>\r\n                <div className={'row mt-3'}>\r\n                    {\r\n                        favoriteMovies && favoriteMovies.results.length\r\n                            ? favoriteMovies.results.map(favorite => {\r\n                                return <div key={favorite.id} className=\"col-6   col-md-4 col-lg-3 mb-4\">\r\n                                    <MovieItem item={favorite}\r\n                                               changeFavorite={this.changeFavorite}\r\n                                               changeWatchlist={this.changeWatchlist}\r\n                                               account_id={account_id}\r\n                                               session_id={session_id}\r\n                                               isAuth={isAuth}\r\n                                               setRatingThunk={setRatingThunk}\r\n                                    />\r\n                                </div>\r\n                            })\r\n                            : <h1>Favorite movies not found.</h1>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Favorite;","import {API, PersonDetailType, PersonFilmsRespType, PersonSocialRespType} from '../api/api';\r\nimport {ThunkDispatch} from 'redux-thunk';\r\nimport {AppRootStateType, TMDBActionType} from './store';\r\nimport {changeStatus, setError} from './appReducer';\r\n\r\nconst initialState = {\r\n    personDetails: null as null | PersonDetailType,\r\n    social: null as null | PersonSocialRespType,\r\n    personFilms: null as null | PersonFilmsRespType\r\n}\r\n\r\nexport type InitialPersonStateType = typeof initialState;\r\n\r\nexport const personReducer = (state: InitialPersonStateType = initialState, action: PersonActionsType): InitialPersonStateType => {\r\n    switch (action.type) {\r\n        case 'PERSON/SET-PERSON-DETAIL':\r\n            return {\r\n                ...state,\r\n                personDetails: action.payload\r\n            }\r\n        case 'PERSON/SET-SOCIAL':\r\n            return {\r\n                ...state,\r\n                social: action.payload\r\n            }\r\n        case 'PERSON/SET-PERSON-FILMS':\r\n            return {\r\n                ...state,\r\n                personFilms: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//actions\r\nexport const setPersonDetail = (person: PersonDetailType) => {\r\n    return {\r\n        type: 'PERSON/SET-PERSON-DETAIL',\r\n        payload: person\r\n    } as const;\r\n}\r\nexport const setSocial = (social: PersonSocialRespType) => {\r\n    return {\r\n        type: 'PERSON/SET-SOCIAL',\r\n        payload: social\r\n    } as const;\r\n}\r\nexport const setPersonFilms = (personFilms: PersonFilmsRespType) => {\r\n    return {\r\n        type: 'PERSON/SET-PERSON-FILMS',\r\n        payload: personFilms\r\n    } as const;\r\n}\r\n\r\n//thunks\r\nexport const getPersonDetail = (link: string) => async (dispatch: ThunkDispatch<AppRootStateType, unknown, TMDBActionType>) => {\r\n    dispatch(changeStatus('loading'));\r\n    try {\r\n        let data = await API.getPersonDetail(link);\r\n        dispatch(changeStatus('succeeded'));\r\n        dispatch(setPersonDetail(data));\r\n    } catch (e) {\r\n        dispatch(changeStatus('failed'));\r\n        //ser LoginForm serverError\r\n        dispatch(setError(e.response.data.status_message));\r\n\r\n        setTimeout(() => {\r\n            dispatch(setError(null));\r\n        }, 3000);\r\n    }\r\n}\r\nexport const getPersonSocial = (link: string) => async (dispatch: ThunkDispatch<AppRootStateType, unknown, TMDBActionType>) => {\r\n    dispatch(changeStatus('loading'));\r\n    try {\r\n        let data = await API.getPersonSocial(link);\r\n        dispatch(changeStatus('succeeded'));\r\n        dispatch(setSocial(data));\r\n    } catch (e) {\r\n        dispatch(changeStatus('failed'));\r\n        //ser LoginForm serverError\r\n        dispatch(setError(e.response.data.status_message));\r\n\r\n        setTimeout(() => {\r\n            dispatch(setError(null));\r\n        }, 3000);\r\n    }\r\n}\r\nexport const getPersonFilms = (link: string) => async (dispatch: ThunkDispatch<AppRootStateType, unknown, TMDBActionType>) => {\r\n    dispatch(changeStatus('loading'));\r\n    try {\r\n        let data = await API.getPersonFilms(link);\r\n        dispatch(changeStatus('succeeded'));\r\n        dispatch(setPersonFilms(data));\r\n    } catch (e) {\r\n        dispatch(changeStatus('failed'));\r\n        //ser LoginForm serverError\r\n        dispatch(setError(e.response.data.status_message));\r\n\r\n        setTimeout(() => {\r\n            dispatch(setError(null));\r\n        }, 3000);\r\n    }\r\n}\r\n\r\n//types\r\ntype SetPersonDetailAC = ReturnType<typeof setPersonDetail>;\r\ntype SetSocialAC = ReturnType<typeof setSocial>;\r\ntype SetPersonFilmsAC = ReturnType<typeof setPersonFilms>;\r\n\r\nexport type PersonActionsType =\r\n    SetPersonDetailAC\r\n    | SetSocialAC\r\n    | SetPersonFilmsAC;\r\n","import React, {PureComponent} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {PersonCastType} from '../../../../api/api';\r\n\r\ntype PersonItemPropsType = {\r\n    film :PersonCastType\r\n}\r\nclass PersonItem extends PureComponent<PersonItemPropsType> {\r\n    render() {\r\n        const {film} = this.props;\r\n        return (\r\n            <NavLink to={`/movie/${film.id}`}>\r\n                <img\r\n                    className=\"card-img-top card-img--height person__films-img\"\r\n                    src={film.poster_path ||\r\n                    film.backdrop_path ? `https://image.tmdb.org/t/p/w500${film.poster_path ||\r\n                    film.backdrop_path}` : 'https://static.wikia.nocookie.net/nopixel/images/b/b4/Not-found-image-15383864787lu.jpg/revision/latest?cb=20200910062142'}\r\n                    alt=\"\"\r\n                />\r\n            </NavLink>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PersonItem;","import React, {PureComponent} from 'react';\r\nimport {AppRootStateType} from '../../../Store/store';\r\nimport {connect} from 'react-redux';\r\nimport {getPersonDetail, getPersonFilms, getPersonSocial, InitialPersonStateType} from '../../../Store/personReducer';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {API_KEY_3, API_URL} from '../../../api/api';\r\nimport PersonItem from './PersonItem/PersonItem';\r\n\r\ntype PersonParamsType = {\r\n    personId: string\r\n}\r\ntype PersonPagePropsType = RouteComponentProps<PersonParamsType> & MapStateToProps & MapDispatchToProps ;\r\n\r\nclass PersonPage extends PureComponent<PersonPagePropsType> {\r\n    componentDidMount() {\r\n        const personId = this.props.match.params.personId;\r\n        let personDetailsUrl = `${API_URL}/person/${personId}?api_key=${API_KEY_3}&language=ru-RU`;\r\n        this.props.getPersonDetail(personDetailsUrl);\r\n        let personSocialUrl = `${API_URL}/person/${personId}/external_ids?api_key=${API_KEY_3}`;\r\n        this.props.getPersonSocial(personSocialUrl);\r\n        let personFilmsUrl = `${API_URL}/person/${personId}/movie_credits?api_key=${API_KEY_3}`;\r\n        this.props.getPersonFilms(personFilmsUrl);\r\n    }\r\n\r\n    render() {\r\n        const {personState: {personDetails, social, personFilms}} = this.props;\r\n        return (\r\n            <div className={'container mt-4 person__page'}>\r\n                <div className=\"row person\">\r\n                    <div style={{width: '300px'}} className={''}>\r\n                        <div className=\"person__poster\">\r\n                            {\r\n                                personDetails && personDetails.profile_path\r\n                                    ? <img\r\n                                        src={`https://image.tmdb.org/t/p/w500${personDetails && personDetails.profile_path}`}\r\n                                        alt=\"\"/>\r\n                                    : 'https://static.wikia.nocookie.net/nopixel/images/b/b4/Not-found-image-15383864787lu.jpg/revision/latest?cb=20200910062142'\r\n                            }\r\n\r\n                        </div>\r\n                        <div className=\"person__details mt-4\">\r\n                            <div className=\"person__social\">\r\n                                {\r\n                                    social && social.twitter_id && <div className=\"social social-twitter\">\r\n                                        <a href={`https://twitter.com/${social && social.twitter_id}`} target={'_blank'}\r\n                                           title={'Twitter'}>\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\"\r\n                                                 fill=\"currentColor\"\r\n                                                 className=\"bi bi-twitter\" viewBox=\"0 0 16 16\">\r\n                                                <path\r\n                                                    d=\"M5.026 15c6.038 0 9.341-5.003 9.341-9.334 0-.14 0-.282-.006-.422A6.685 6.685 0 0 0 16 3.542a6.658 6.658 0 0 1-1.889.518 3.301 3.301 0 0 0 1.447-1.817 6.533 6.533 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.325 9.325 0 0 1-6.767-3.429 3.289 3.289 0 0 0 1.018 4.382A3.323 3.323 0 0 1 .64 6.575v.045a3.288 3.288 0 0 0 2.632 3.218 3.203 3.203 0 0 1-.865.115 3.23 3.23 0 0 1-.614-.057 3.283 3.283 0 0 0 3.067 2.277A6.588 6.588 0 0 1 .78 13.58a6.32 6.32 0 0 1-.78-.045A9.344 9.344 0 0 0 5.026 15z\"/>\r\n                                            </svg>\r\n                                        </a>\r\n                                    </div>\r\n                                }\r\n                                {social && social.instagram_id &&\r\n                                <div className=\" social social-instagram\">\r\n                                    <a href={`https://instagram.com/${social && social.instagram_id}`}\r\n                                       target={'_blank'} title={'Instagram'}>\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\"\r\n                                             fill=\"currentColor\"\r\n                                             className=\"bi bi-instagram\" viewBox=\"0 0 16 16\">\r\n                                            <path\r\n                                                d=\"M8 0C5.829 0 5.556.01 4.703.048 3.85.088 3.269.222 2.76.42a3.917 3.917 0 0 0-1.417.923A3.927 3.927 0 0 0 .42 2.76C.222 3.268.087 3.85.048 4.7.01 5.555 0 5.827 0 8.001c0 2.172.01 2.444.048 3.297.04.852.174 1.433.372 1.942.205.526.478.972.923 1.417.444.445.89.719 1.416.923.51.198 1.09.333 1.942.372C5.555 15.99 5.827 16 8 16s2.444-.01 3.298-.048c.851-.04 1.434-.174 1.943-.372a3.916 3.916 0 0 0 1.416-.923c.445-.445.718-.891.923-1.417.197-.509.332-1.09.372-1.942C15.99 10.445 16 10.173 16 8s-.01-2.445-.048-3.299c-.04-.851-.175-1.433-.372-1.941a3.926 3.926 0 0 0-.923-1.417A3.911 3.911 0 0 0 13.24.42c-.51-.198-1.092-.333-1.943-.372C10.443.01 10.172 0 7.998 0h.003zm-.717 1.442h.718c2.136 0 2.389.007 3.232.046.78.035 1.204.166 1.486.275.373.145.64.319.92.599.28.28.453.546.598.92.11.281.24.705.275 1.485.039.843.047 1.096.047 3.231s-.008 2.389-.047 3.232c-.035.78-.166 1.203-.275 1.485a2.47 2.47 0 0 1-.599.919c-.28.28-.546.453-.92.598-.28.11-.704.24-1.485.276-.843.038-1.096.047-3.232.047s-2.39-.009-3.233-.047c-.78-.036-1.203-.166-1.485-.276a2.478 2.478 0 0 1-.92-.598 2.48 2.48 0 0 1-.6-.92c-.109-.281-.24-.705-.275-1.485-.038-.843-.046-1.096-.046-3.233 0-2.136.008-2.388.046-3.231.036-.78.166-1.204.276-1.486.145-.373.319-.64.599-.92.28-.28.546-.453.92-.598.282-.11.705-.24 1.485-.276.738-.034 1.024-.044 2.515-.045v.002zm4.988 1.328a.96.96 0 1 0 0 1.92.96.96 0 0 0 0-1.92zm-4.27 1.122a4.109 4.109 0 1 0 0 8.217 4.109 4.109 0 0 0 0-8.217zm0 1.441a2.667 2.667 0 1 1 0 5.334 2.667 2.667 0 0 1 0-5.334z\"/>\r\n                                        </svg>\r\n                                    </a>\r\n                                </div>\r\n                                }\r\n                                {social && social.facebook_id &&\r\n                                <div className=\" social social-facebook\">\r\n                                    <a href={`https://facebook.com/${social && social.facebook_id}`}\r\n                                       target={'_blank'} title={'Instagram'}>\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\"\r\n                                             fill=\"currentColor\" className=\"bi bi-facebook\" viewBox=\"0 0 16 16\">\r\n                                            <path\r\n                                                d=\"M16 8.049c0-4.446-3.582-8.05-8-8.05C3.58 0-.002 3.603-.002 8.05c0 4.017 2.926 7.347 6.75 7.951v-5.625h-2.03V8.05H6.75V6.275c0-2.017 1.195-3.131 3.022-3.131.876 0 1.791.157 1.791.157v1.98h-1.009c-.993 0-1.303.621-1.303 1.258v1.51h2.218l-.354 2.326H9.25V16c3.824-.604 6.75-3.934 6.75-7.951z\"/>\r\n                                        </svg>\r\n                                    </a>\r\n                                </div>\r\n                                }\r\n                            </div>\r\n                            <h3 className={'person__details-title'}>Персональная информация</h3>\r\n                            <section className=\"person__info\">\r\n                                <p>\r\n                                    <strong>\r\n                                        <bdi>Известность за</bdi>\r\n                                    </strong>\r\n                                    Актёрское искусство\r\n                                </p>\r\n                                <p>\r\n                                    <strong>\r\n                                        <bdi>Пол</bdi>\r\n                                    </strong>\r\n                                    {\r\n                                        personDetails && personDetails.gender === 1\r\n                                            ? 'Женский'\r\n                                            : 'Мужской'\r\n                                    }\r\n                                </p>\r\n                                <p>\r\n                                    <strong>\r\n                                        <bdi>Дата рождения</bdi>\r\n                                    </strong>\r\n                                    {personDetails && personDetails.birthday}\r\n                                </p>\r\n                                <p>\r\n                                    <strong>\r\n                                        <bdi>Место рождения</bdi>\r\n                                    </strong>\r\n                                    {personDetails && personDetails.place_of_birth}\r\n                                </p>\r\n                                <p>\r\n                                    <strong>\r\n                                        <bdi>Также известен под именем</bdi>\r\n                                    </strong>\r\n                                    {personDetails && personDetails.also_known_as.map(name => <span\r\n                                        style={{display: 'block'}}\r\n                                        key={name}>{name}</span>)}\r\n                                </p>\r\n                            </section>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className={'col '}>\r\n                        <div className=\"person__content\">\r\n                            <h2 className=\"person__content-title\">{personDetails && personDetails.name}</h2>\r\n                            <div className=\"person__biography\">\r\n                                <h3>Биография</h3>\r\n                                {\r\n                                    personDetails && personDetails.biography\r\n                                        ? <p> {personDetails && personDetails.biography}</p>\r\n                                        : <p>У нас нет биографии для {personDetails && personDetails.name}</p>\r\n                                }\r\n                            </div>\r\n                            <div className=\"person__films mt-3\">\r\n                                <h3>Снимался в фильмах</h3>\r\n                                <div className=\"row\">\r\n                                    {\r\n                                        personFilms && personFilms.cast.map((film, i) => <div key={film.id + i}\r\n                                                                                         className=\"col-sm-6 col-lg-3 .col-xl- mb-2\">\r\n                                            <PersonItem film={film}/>\r\n                                        </div>)\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\ntype MapStateToProps = {\r\n    // personDetails: null | PersonDetailType\r\n    // social: null | PersonSocialRespType\r\n    // personFilms:  null | PersonFilmsRespType\r\n    personState: InitialPersonStateType\r\n}\r\nconst mapStateToProps = (state: AppRootStateType): MapStateToProps => {\r\n    return {\r\n        // personDetails: state.personPage.personDetails,\r\n        // social: state.personPage.social\r\n        personState: state.personPage\r\n    }\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    getPersonDetail: (link: string) => void\r\n    getPersonSocial: (link: string) => void\r\n    getPersonFilms: (link: string) => void\r\n}\r\nexport default connect<MapStateToProps, MapDispatchToProps, {}, AppRootStateType>(mapStateToProps, {\r\n    getPersonDetail,\r\n    getPersonSocial,\r\n    getPersonFilms\r\n})(withRouter(PersonPage));\r\n","import React from 'react';\r\nimport Header from './Header/Header';\r\nimport {AppRootStateType} from '../Store/store';\r\nimport {\r\n    changeIsAuth,\r\n    getAccountDetails,\r\n    InitialAppStateType,\r\n    logoutUser,\r\n    setError,\r\n    setSessionId,\r\n    setUser,\r\n    userAuthFlow\r\n} from '../Store/appReducer';\r\nimport {connect} from 'react-redux';\r\nimport {AddFavoriteBodyType, AddWatchlistBodyType, API_KEY_3, API_URL, GetMovies} from '../api/api';\r\nimport {GetAccountDetailsResponse} from './Header/Login/LoginForm/LoginForm';\r\n\r\nimport MoviesPage from './Pages/MoviesPage/MoviesPage';\r\nimport MoviePage from './Pages/MoviePage/MoviePage';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport PageNotFound from './Pages/PageNotFound/PageNotFound';\r\nimport {Alert} from 'reactstrap';\r\nimport {Loader} from './Common/Loader/Loader';\r\nimport Favorite from './Pages/Favorite/Favorite';\r\nimport {addFavorite, addWatchlist, getFavoriteList, setRatingThunk} from '../Store/movieReducer';\r\n//work with cookie\r\nimport Cookies from 'universal-cookie';\r\nimport PersonPage from './Pages/PersonPage/PersonPage';\r\n\r\nconst cookies = new Cookies();\r\n\r\n\r\nexport type Sort_By_type = 'popularity.desc' | 'popularity.asc' | 'vote_average.desc' | 'vote_average.asc';\r\nexport type FilterType = {\r\n    sort_by: Sort_By_type\r\n    primary_release_year: string\r\n    with_genres: Array<string>\r\n}\r\n\r\n\r\nclass App extends React.PureComponent<MapStateToProps & MapDispatchToProps> {\r\n    state = {\r\n        visible: true\r\n    }\r\n    // logout User\r\n    onDeleteSession = () => {\r\n        const link = `${API_URL}/authentication/session?api_key=${API_KEY_3}`;\r\n        this.props.logoutUser(link);\r\n    }\r\n    // error alert\r\n    onDismiss = () => {\r\n        this.setState({\r\n            visible: false\r\n        });\r\n        this.props.setError(null);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const session_id = cookies.get('session_id');\r\n        if (session_id) {\r\n            const accountUrl = `${API_URL}/account?api_key=${API_KEY_3}&session_id=${session_id}`;\r\n            this.props.getAccountDetails(accountUrl, session_id);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {appReducer: {error, status, session_id, user, isAuth}, getFavoriteList, favoriteMovies, addWatchlist, setRatingThunk, addFavorite, statusCode} = this.props;\r\n\r\n        return (\r\n            <>\r\n                <Header user={user} onDeleteSession={this.onDeleteSession}/>\r\n                {/*error Alerts*/}\r\n                {error ? <Alert color=\"danger\" isOpen={this.state.visible} toggle={this.onDismiss} className={'mt-3'}>\r\n                    {error}\r\n                </Alert> : ''}\r\n                {/*Loader*/}\r\n                {status === 'loading' ? <Loader/> : ''}\r\n                <Switch>\r\n                    <Route exact path={'/'} render={() => <MoviesPage/>}/>\r\n                    <Route exact path={'/movie/:id'} render={() => <MoviePage/>}/>\r\n                    <Route exact path={'/movie/:id/:movietype?'} render={() => <MoviePage/>}/>\r\n                    <Route exact path={'/person/:personId'} render={() => <PersonPage/>}/>\r\n                    <Route exact path={'/favorite'} render={() => <Favorite session_id={session_id}\r\n                                                                            account_id={user && user.id}\r\n                                                                            isAuth={isAuth}\r\n                                                                            getFavoriteList={getFavoriteList}\r\n                                                                            favoriteMovies={favoriteMovies}\r\n                                                                            addFavorite={addFavorite}\r\n                                                                            addWatchlist={addWatchlist}\r\n                                                                            statusCode={statusCode}\r\n                                                                            setRatingThunk={setRatingThunk}\r\n                    />}/>\r\n                    <Route exact path={'/404'} render={() => <PageNotFound/>}/>\r\n                    <Route exact path={'*'} render={() => <Redirect to={'/404'}/>}/>\r\n                </Switch>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\ntype MapStateToProps = {\r\n    appReducer: InitialAppStateType\r\n    favoriteMovies: GetMovies | null\r\n    statusCode: number | null\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStateToProps => {\r\n    return {\r\n        appReducer: state.app,\r\n        favoriteMovies: state.moviePage.favoriteMovies,\r\n        statusCode: state.moviePage.statusCode\r\n    }\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    setUser: (user: GetAccountDetailsResponse | null) => void\r\n    setSessionId: (session_id: string) => void\r\n    logoutUser: (link: string) => void\r\n    getAccountDetails: (link: string, session_id: string) => void;\r\n    changeIsAuth: (isAuth: boolean) => void\r\n    userAuthFlow: (username: string, password: string) => void\r\n    setError: (error: null | string) => void\r\n    getFavoriteList: (link: string) => void\r\n    addFavorite: (link: string, body: AddFavoriteBodyType) => void\r\n    addWatchlist: (link: string, body: AddWatchlistBodyType) => void\r\n    setRatingThunk: (link: string, body: { value: number }) => void\r\n}\r\nexport default connect<MapStateToProps, MapDispatchToProps, {}, AppRootStateType>(mapStateToProps, {\r\n    setUser,\r\n    setSessionId,\r\n    logoutUser,\r\n    getAccountDetails,\r\n    changeIsAuth,\r\n    userAuthFlow,\r\n    setError,\r\n    getFavoriteList,\r\n    addWatchlist,\r\n    addFavorite,\r\n    setRatingThunk\r\n})(App);","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport {AppActionsType, appReducer} from './appReducer';\r\nimport {MoviesActionsType, moviesReducer} from './moviesReducer';\r\nimport {GenresFilterActionsType, genresFilterReducer} from './genresFilterReducer';\r\nimport thunk from 'redux-thunk';\r\nimport {MovieActionsType, movieReducer} from './movieReducer';\r\nimport {TabMovieActionsType, tabMovieReducer} from './tabMovieReducer';\r\nimport {PersonActionsType, personReducer} from './personReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    movies: moviesReducer,\r\n    genresFilter: genresFilterReducer,\r\n    moviePage: movieReducer,\r\n    tabMoviePage: tabMovieReducer,\r\n    personPage: personReducer\r\n});\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n//common actions type\r\nexport type TMDBActionType =\r\n    GenresFilterActionsType\r\n    | AppActionsType\r\n    | MoviesActionsType\r\n    | MovieActionsType\r\n    | TabMovieActionsType\r\n    | PersonActionsType;\r\n\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./stylesheets/index.css\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./Store/store\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>\r\n    , document.getElementById(\"root\"));\r\n"],"sourceRoot":""}